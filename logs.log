2023-04-16 02:55:17,215:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-16 02:55:17,215:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-16 02:55:17,215:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-16 02:55:17,215:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-16 02:55:20,048:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-04-16 03:04:34,780:INFO:PyCaret RegressionExperiment
2023-04-16 03:04:34,780:INFO:Logging name: reg-default-name
2023-04-16 03:04:34,781:INFO:ML Usecase: MLUsecase.REGRESSION
2023-04-16 03:04:34,781:INFO:version 3.0.0
2023-04-16 03:04:34,781:INFO:Initializing setup()
2023-04-16 03:04:34,781:INFO:self.USI: 884d
2023-04-16 03:04:34,781:INFO:self._variable_keys: {'n_jobs_param', 'seed', '_ml_usecase', 'idx', 'gpu_n_jobs_param', 'y', 'y_train', 'fold_groups_param', 'X', 'fold_generator', 'exp_id', 'X_train', 'html_param', 'memory', 'pipeline', '_available_plots', 'transform_target_param', 'exp_name_log', 'fold_shuffle_param', 'data', 'USI', 'X_test', 'gpu_param', 'y_test', 'logging_param', 'log_plots_param', 'target_param'}
2023-04-16 03:04:34,782:INFO:Checking environment
2023-04-16 03:04:34,782:INFO:python_version: 3.9.13
2023-04-16 03:04:34,782:INFO:python_build: ('main', 'Aug 28 2022 18:56:22')
2023-04-16 03:04:34,782:INFO:machine: arm64
2023-04-16 03:04:34,822:INFO:platform: macOS-13.0.1-arm64-arm-64bit
2023-04-16 03:04:34,823:INFO:Memory: svmem(total=8589934592, available=1535442944, percent=82.1, used=3164176384, free=66191360, active=1482801152, inactive=1340063744, wired=1681375232)
2023-04-16 03:04:34,823:INFO:Physical Core: 8
2023-04-16 03:04:34,823:INFO:Logical Core: 8
2023-04-16 03:04:34,823:INFO:Checking libraries
2023-04-16 03:04:34,823:INFO:System:
2023-04-16 03:04:34,823:INFO:    python: 3.9.13 (main, Aug 28 2022, 18:56:22)  [Clang 13.1.6 (clang-1316.0.21.2.5)]
2023-04-16 03:04:34,823:INFO:executable: /opt/homebrew/opt/python@3.9/bin/python3.9
2023-04-16 03:04:34,823:INFO:   machine: macOS-13.0.1-arm64-arm-64bit
2023-04-16 03:04:34,824:INFO:PyCaret required dependencies:
2023-04-16 03:04:34,824:INFO:                 pip: 23.1
2023-04-16 03:04:34,824:INFO:          setuptools: 63.4.3
2023-04-16 03:04:34,824:INFO:             pycaret: 3.0.0
2023-04-16 03:04:34,824:INFO:             IPython: 8.4.0
2023-04-16 03:04:34,824:INFO:          ipywidgets: 8.0.6
2023-04-16 03:04:34,824:INFO:                tqdm: 4.64.1
2023-04-16 03:04:34,824:INFO:               numpy: 1.22.4
2023-04-16 03:04:34,824:INFO:              pandas: 1.5.3
2023-04-16 03:04:34,824:INFO:              jinja2: 3.1.2
2023-04-16 03:04:34,824:INFO:               scipy: 1.9.3
2023-04-16 03:04:34,824:INFO:              joblib: 1.2.0
2023-04-16 03:04:34,824:INFO:             sklearn: 1.2.2
2023-04-16 03:04:34,824:INFO:                pyod: 1.0.9
2023-04-16 03:04:34,824:INFO:            imblearn: 0.10.1
2023-04-16 03:04:34,824:INFO:   category_encoders: 2.6.0
2023-04-16 03:04:34,824:INFO:            lightgbm: 3.3.5
2023-04-16 03:04:34,824:INFO:               numba: 0.56.4
2023-04-16 03:04:34,824:INFO:            requests: 2.27.1
2023-04-16 03:04:34,824:INFO:          matplotlib: 3.6.3
2023-04-16 03:04:34,824:INFO:          scikitplot: 0.3.7
2023-04-16 03:04:34,824:INFO:         yellowbrick: 1.5
2023-04-16 03:04:34,824:INFO:              plotly: 5.14.1
2023-04-16 03:04:34,824:INFO:             kaleido: 0.2.1
2023-04-16 03:04:34,824:INFO:         statsmodels: 0.13.5
2023-04-16 03:04:34,824:INFO:              sktime: 0.17.1
2023-04-16 03:04:34,824:INFO:               tbats: 1.1.2
2023-04-16 03:04:34,824:INFO:            pmdarima: 2.0.3
2023-04-16 03:04:34,824:INFO:              psutil: 5.9.1
2023-04-16 03:04:34,824:INFO:PyCaret optional dependencies:
2023-04-16 03:04:34,835:INFO:                shap: Not installed
2023-04-16 03:04:34,835:INFO:           interpret: Not installed
2023-04-16 03:04:34,835:INFO:                umap: Not installed
2023-04-16 03:04:34,835:INFO:    pandas_profiling: 4.1.2
2023-04-16 03:04:34,835:INFO:  explainerdashboard: Not installed
2023-04-16 03:04:34,835:INFO:             autoviz: Not installed
2023-04-16 03:04:34,835:INFO:           fairlearn: Not installed
2023-04-16 03:04:34,835:INFO:             xgboost: Not installed
2023-04-16 03:04:34,835:INFO:            catboost: Not installed
2023-04-16 03:04:34,835:INFO:              kmodes: Not installed
2023-04-16 03:04:34,835:INFO:             mlxtend: Not installed
2023-04-16 03:04:34,835:INFO:       statsforecast: Not installed
2023-04-16 03:04:34,835:INFO:        tune_sklearn: Not installed
2023-04-16 03:04:34,835:INFO:                 ray: Not installed
2023-04-16 03:04:34,835:INFO:            hyperopt: Not installed
2023-04-16 03:04:34,835:INFO:              optuna: Not installed
2023-04-16 03:04:34,835:INFO:               skopt: Not installed
2023-04-16 03:04:34,835:INFO:              mlflow: Not installed
2023-04-16 03:04:34,835:INFO:              gradio: Not installed
2023-04-16 03:04:34,835:INFO:             fastapi: Not installed
2023-04-16 03:04:34,835:INFO:             uvicorn: Not installed
2023-04-16 03:04:34,835:INFO:              m2cgen: Not installed
2023-04-16 03:04:34,835:INFO:           evidently: Not installed
2023-04-16 03:04:34,835:INFO:               fugue: Not installed
2023-04-16 03:04:34,835:INFO:           streamlit: 1.21.0
2023-04-16 03:04:34,835:INFO:             prophet: Not installed
2023-04-16 03:04:34,835:INFO:None
2023-04-16 03:04:34,835:INFO:Set up data.
2023-04-16 03:04:34,852:INFO:Set up train/test split.
2023-04-16 03:04:34,859:INFO:Set up index.
2023-04-16 03:04:34,859:INFO:Set up folding strategy.
2023-04-16 03:04:34,859:INFO:Assigning column types.
2023-04-16 03:04:34,860:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-16 03:04:34,860:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-04-16 03:04:34,863:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-04-16 03:04:34,865:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-04-16 03:04:34,892:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-04-16 03:04:34,911:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-16 03:04:34,911:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:04:35,406:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:04:35,406:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-04-16 03:04:35,408:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-04-16 03:04:35,410:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-04-16 03:04:35,435:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-04-16 03:04:35,453:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-16 03:04:35,453:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:04:35,453:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:04:35,454:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-04-16 03:04:35,456:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-04-16 03:04:35,457:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-04-16 03:04:35,481:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-04-16 03:04:35,500:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-16 03:04:35,500:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:04:35,500:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:04:35,502:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-04-16 03:04:35,504:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-04-16 03:04:35,528:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-04-16 03:04:35,547:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-16 03:04:35,547:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:04:35,547:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:04:35,547:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-04-16 03:04:35,551:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-04-16 03:04:35,574:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-04-16 03:04:35,593:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-16 03:04:35,593:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:04:35,593:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:04:35,597:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-04-16 03:04:35,621:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-04-16 03:04:35,640:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-16 03:04:35,640:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:04:35,640:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:04:35,640:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-04-16 03:04:35,668:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-04-16 03:04:35,686:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-16 03:04:35,688:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:04:35,689:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:04:35,716:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-04-16 03:04:35,735:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-16 03:04:35,735:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:04:35,735:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:04:35,735:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-16 03:04:35,763:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-04-16 03:04:35,783:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:04:35,783:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:04:35,810:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-04-16 03:04:35,829:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:04:35,829:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:04:35,829:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-04-16 03:04:35,876:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:04:35,876:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:04:35,921:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:04:35,922:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:04:35,923:INFO:Preparing preprocessing pipeline...
2023-04-16 03:04:35,923:INFO:Set up simple imputation.
2023-04-16 03:04:35,925:INFO:Set up encoding of categorical features.
2023-04-16 03:04:35,925:INFO:Set up column name cleaning.
2023-04-16 03:04:35,957:INFO:Finished creating preprocessing pipeline.
2023-04-16 03:04:35,961:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/6h/lc7qdbvj2pj7j5w_bscg4wb40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Local time'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Local time'],
                                    transformer=LeaveOneOutEncoder(cols=['Local '
                                                                         'time'],
                                                                   handle_missing='return_nan',
                                                                   random_state=1762))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-04-16 03:04:35,961:INFO:Creating final display dataframe.
2023-04-16 03:04:36,028:INFO:Setup _display_container:                     Description             Value
0                    Session id              1762
1                        Target             Close
2                   Target type        Regression
3           Original data shape         (1840, 6)
4        Transformed data shape         (1840, 6)
5   Transformed train set shape         (1288, 6)
6    Transformed test set shape          (552, 6)
7              Numeric features                 4
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              884d
2023-04-16 03:04:36,080:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:04:36,080:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:04:36,130:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:04:36,130:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:04:36,130:INFO:setup() successfully completed in 1.36s...............
2023-04-16 03:04:36,161:INFO:Initializing compare_models()
2023-04-16 03:04:36,161:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x289bb63a0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x289bb63a0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-04-16 03:04:36,161:INFO:Checking exceptions
2023-04-16 03:04:36,162:INFO:Preparing display monitor
2023-04-16 03:04:36,164:INFO:Initializing Linear Regression
2023-04-16 03:04:36,164:INFO:Total runtime is 7.152557373046875e-07 minutes
2023-04-16 03:04:36,164:INFO:SubProcess create_model() called ==================================
2023-04-16 03:04:36,165:INFO:Initializing create_model()
2023-04-16 03:04:36,165:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289bb63a0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2893f57f0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:04:36,165:INFO:Checking exceptions
2023-04-16 03:04:36,165:INFO:Importing libraries
2023-04-16 03:04:36,165:INFO:Copying training dataset
2023-04-16 03:04:36,166:INFO:Defining folds
2023-04-16 03:04:36,166:INFO:Declaring metric variables
2023-04-16 03:04:36,166:INFO:Importing untrained model
2023-04-16 03:04:36,166:INFO:Linear Regression Imported successfully
2023-04-16 03:04:36,166:INFO:Starting cross validation
2023-04-16 03:04:36,171:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:04:40,143:INFO:Calculating mean and std
2023-04-16 03:04:40,144:INFO:Creating metrics dataframe
2023-04-16 03:04:40,152:INFO:Uploading results into container
2023-04-16 03:04:40,153:INFO:Uploading model into container now
2023-04-16 03:04:40,154:INFO:_master_model_container: 1
2023-04-16 03:04:40,154:INFO:_display_container: 2
2023-04-16 03:04:40,155:INFO:LinearRegression(n_jobs=-1)
2023-04-16 03:04:40,155:INFO:create_model() successfully completed......................................
2023-04-16 03:04:40,334:INFO:SubProcess create_model() end ==================================
2023-04-16 03:04:40,334:INFO:Creating metrics dataframe
2023-04-16 03:04:40,337:INFO:Initializing Lasso Regression
2023-04-16 03:04:40,337:INFO:Total runtime is 0.06954041719436646 minutes
2023-04-16 03:04:40,337:INFO:SubProcess create_model() called ==================================
2023-04-16 03:04:40,337:INFO:Initializing create_model()
2023-04-16 03:04:40,337:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289bb63a0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2893f57f0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:04:40,337:INFO:Checking exceptions
2023-04-16 03:04:40,337:INFO:Importing libraries
2023-04-16 03:04:40,337:INFO:Copying training dataset
2023-04-16 03:04:40,339:INFO:Defining folds
2023-04-16 03:04:40,339:INFO:Declaring metric variables
2023-04-16 03:04:40,339:INFO:Importing untrained model
2023-04-16 03:04:40,339:INFO:Lasso Regression Imported successfully
2023-04-16 03:04:40,339:INFO:Starting cross validation
2023-04-16 03:04:40,340:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:04:40,437:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.147e+08, tolerance: 3.342e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:04:40,445:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.184e+08, tolerance: 3.260e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:04:40,449:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.159e+08, tolerance: 3.261e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:04:40,451:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.194e+08, tolerance: 3.349e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:04:40,454:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.178e+08, tolerance: 3.324e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:04:40,470:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.134e+08, tolerance: 3.353e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:04:40,476:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.198e+08, tolerance: 3.354e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:04:40,484:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.194e+08, tolerance: 3.282e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:04:40,510:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.186e+08, tolerance: 3.333e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:04:40,517:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.194e+08, tolerance: 3.357e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:04:40,533:INFO:Calculating mean and std
2023-04-16 03:04:40,533:INFO:Creating metrics dataframe
2023-04-16 03:04:40,535:INFO:Uploading results into container
2023-04-16 03:04:40,535:INFO:Uploading model into container now
2023-04-16 03:04:40,535:INFO:_master_model_container: 2
2023-04-16 03:04:40,535:INFO:_display_container: 2
2023-04-16 03:04:40,535:INFO:Lasso(random_state=1762)
2023-04-16 03:04:40,535:INFO:create_model() successfully completed......................................
2023-04-16 03:04:40,613:INFO:SubProcess create_model() end ==================================
2023-04-16 03:04:40,613:INFO:Creating metrics dataframe
2023-04-16 03:04:40,615:INFO:Initializing Ridge Regression
2023-04-16 03:04:40,615:INFO:Total runtime is 0.07417373259862264 minutes
2023-04-16 03:04:40,615:INFO:SubProcess create_model() called ==================================
2023-04-16 03:04:40,615:INFO:Initializing create_model()
2023-04-16 03:04:40,615:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289bb63a0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2893f57f0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:04:40,615:INFO:Checking exceptions
2023-04-16 03:04:40,615:INFO:Importing libraries
2023-04-16 03:04:40,615:INFO:Copying training dataset
2023-04-16 03:04:40,616:INFO:Defining folds
2023-04-16 03:04:40,616:INFO:Declaring metric variables
2023-04-16 03:04:40,616:INFO:Importing untrained model
2023-04-16 03:04:40,616:INFO:Ridge Regression Imported successfully
2023-04-16 03:04:40,616:INFO:Starting cross validation
2023-04-16 03:04:40,617:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:04:40,770:INFO:Calculating mean and std
2023-04-16 03:04:40,771:INFO:Creating metrics dataframe
2023-04-16 03:04:40,772:INFO:Uploading results into container
2023-04-16 03:04:40,773:INFO:Uploading model into container now
2023-04-16 03:04:40,773:INFO:_master_model_container: 3
2023-04-16 03:04:40,773:INFO:_display_container: 2
2023-04-16 03:04:40,773:INFO:Ridge(random_state=1762)
2023-04-16 03:04:40,773:INFO:create_model() successfully completed......................................
2023-04-16 03:04:40,849:INFO:SubProcess create_model() end ==================================
2023-04-16 03:04:40,849:INFO:Creating metrics dataframe
2023-04-16 03:04:40,851:INFO:Initializing Elastic Net
2023-04-16 03:04:40,851:INFO:Total runtime is 0.07811344861984253 minutes
2023-04-16 03:04:40,851:INFO:SubProcess create_model() called ==================================
2023-04-16 03:04:40,851:INFO:Initializing create_model()
2023-04-16 03:04:40,851:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289bb63a0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2893f57f0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:04:40,851:INFO:Checking exceptions
2023-04-16 03:04:40,851:INFO:Importing libraries
2023-04-16 03:04:40,851:INFO:Copying training dataset
2023-04-16 03:04:40,853:INFO:Defining folds
2023-04-16 03:04:40,853:INFO:Declaring metric variables
2023-04-16 03:04:40,853:INFO:Importing untrained model
2023-04-16 03:04:40,853:INFO:Elastic Net Imported successfully
2023-04-16 03:04:40,853:INFO:Starting cross validation
2023-04-16 03:04:40,853:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:04:40,898:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.147e+08, tolerance: 3.342e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:04:40,899:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.159e+08, tolerance: 3.261e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:04:40,904:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.184e+08, tolerance: 3.260e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:04:40,908:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.178e+08, tolerance: 3.324e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:04:40,945:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.198e+08, tolerance: 3.354e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:04:40,957:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.134e+08, tolerance: 3.353e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:04:40,966:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.194e+08, tolerance: 3.349e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:04:40,971:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.186e+08, tolerance: 3.333e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:04:40,978:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.194e+08, tolerance: 3.282e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:04:40,985:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.194e+08, tolerance: 3.357e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:04:41,003:INFO:Calculating mean and std
2023-04-16 03:04:41,003:INFO:Creating metrics dataframe
2023-04-16 03:04:41,005:INFO:Uploading results into container
2023-04-16 03:04:41,005:INFO:Uploading model into container now
2023-04-16 03:04:41,005:INFO:_master_model_container: 4
2023-04-16 03:04:41,005:INFO:_display_container: 2
2023-04-16 03:04:41,005:INFO:ElasticNet(random_state=1762)
2023-04-16 03:04:41,005:INFO:create_model() successfully completed......................................
2023-04-16 03:04:41,083:INFO:SubProcess create_model() end ==================================
2023-04-16 03:04:41,083:INFO:Creating metrics dataframe
2023-04-16 03:04:41,086:INFO:Initializing Least Angle Regression
2023-04-16 03:04:41,086:INFO:Total runtime is 0.08202023108800252 minutes
2023-04-16 03:04:41,086:INFO:SubProcess create_model() called ==================================
2023-04-16 03:04:41,086:INFO:Initializing create_model()
2023-04-16 03:04:41,086:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289bb63a0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2893f57f0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:04:41,086:INFO:Checking exceptions
2023-04-16 03:04:41,086:INFO:Importing libraries
2023-04-16 03:04:41,086:INFO:Copying training dataset
2023-04-16 03:04:41,087:INFO:Defining folds
2023-04-16 03:04:41,087:INFO:Declaring metric variables
2023-04-16 03:04:41,087:INFO:Importing untrained model
2023-04-16 03:04:41,087:INFO:Least Angle Regression Imported successfully
2023-04-16 03:04:41,087:INFO:Starting cross validation
2023-04-16 03:04:41,088:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:04:41,226:INFO:Calculating mean and std
2023-04-16 03:04:41,226:INFO:Creating metrics dataframe
2023-04-16 03:04:41,228:INFO:Uploading results into container
2023-04-16 03:04:41,228:INFO:Uploading model into container now
2023-04-16 03:04:41,229:INFO:_master_model_container: 5
2023-04-16 03:04:41,229:INFO:_display_container: 2
2023-04-16 03:04:41,229:INFO:Lars(random_state=1762)
2023-04-16 03:04:41,229:INFO:create_model() successfully completed......................................
2023-04-16 03:04:41,303:INFO:SubProcess create_model() end ==================================
2023-04-16 03:04:41,303:INFO:Creating metrics dataframe
2023-04-16 03:04:41,305:INFO:Initializing Lasso Least Angle Regression
2023-04-16 03:04:41,305:INFO:Total runtime is 0.08568029801050822 minutes
2023-04-16 03:04:41,305:INFO:SubProcess create_model() called ==================================
2023-04-16 03:04:41,305:INFO:Initializing create_model()
2023-04-16 03:04:41,305:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289bb63a0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2893f57f0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:04:41,305:INFO:Checking exceptions
2023-04-16 03:04:41,305:INFO:Importing libraries
2023-04-16 03:04:41,305:INFO:Copying training dataset
2023-04-16 03:04:41,307:INFO:Defining folds
2023-04-16 03:04:41,307:INFO:Declaring metric variables
2023-04-16 03:04:41,307:INFO:Importing untrained model
2023-04-16 03:04:41,307:INFO:Lasso Least Angle Regression Imported successfully
2023-04-16 03:04:41,307:INFO:Starting cross validation
2023-04-16 03:04:41,307:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:04:41,450:INFO:Calculating mean and std
2023-04-16 03:04:41,450:INFO:Creating metrics dataframe
2023-04-16 03:04:41,452:INFO:Uploading results into container
2023-04-16 03:04:41,452:INFO:Uploading model into container now
2023-04-16 03:04:41,452:INFO:_master_model_container: 6
2023-04-16 03:04:41,452:INFO:_display_container: 2
2023-04-16 03:04:41,452:INFO:LassoLars(random_state=1762)
2023-04-16 03:04:41,452:INFO:create_model() successfully completed......................................
2023-04-16 03:04:41,528:INFO:SubProcess create_model() end ==================================
2023-04-16 03:04:41,528:INFO:Creating metrics dataframe
2023-04-16 03:04:41,530:INFO:Initializing Orthogonal Matching Pursuit
2023-04-16 03:04:41,530:INFO:Total runtime is 0.08942234913508097 minutes
2023-04-16 03:04:41,530:INFO:SubProcess create_model() called ==================================
2023-04-16 03:04:41,530:INFO:Initializing create_model()
2023-04-16 03:04:41,530:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289bb63a0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2893f57f0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:04:41,530:INFO:Checking exceptions
2023-04-16 03:04:41,530:INFO:Importing libraries
2023-04-16 03:04:41,530:INFO:Copying training dataset
2023-04-16 03:04:41,531:INFO:Defining folds
2023-04-16 03:04:41,531:INFO:Declaring metric variables
2023-04-16 03:04:41,531:INFO:Importing untrained model
2023-04-16 03:04:41,531:INFO:Orthogonal Matching Pursuit Imported successfully
2023-04-16 03:04:41,531:INFO:Starting cross validation
2023-04-16 03:04:41,532:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:04:41,672:INFO:Calculating mean and std
2023-04-16 03:04:41,672:INFO:Creating metrics dataframe
2023-04-16 03:04:41,674:INFO:Uploading results into container
2023-04-16 03:04:41,674:INFO:Uploading model into container now
2023-04-16 03:04:41,674:INFO:_master_model_container: 7
2023-04-16 03:04:41,675:INFO:_display_container: 2
2023-04-16 03:04:41,675:INFO:OrthogonalMatchingPursuit()
2023-04-16 03:04:41,675:INFO:create_model() successfully completed......................................
2023-04-16 03:04:41,753:INFO:SubProcess create_model() end ==================================
2023-04-16 03:04:41,753:INFO:Creating metrics dataframe
2023-04-16 03:04:41,755:INFO:Initializing Bayesian Ridge
2023-04-16 03:04:41,756:INFO:Total runtime is 0.09318613211313884 minutes
2023-04-16 03:04:41,756:INFO:SubProcess create_model() called ==================================
2023-04-16 03:04:41,756:INFO:Initializing create_model()
2023-04-16 03:04:41,756:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289bb63a0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2893f57f0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:04:41,756:INFO:Checking exceptions
2023-04-16 03:04:41,756:INFO:Importing libraries
2023-04-16 03:04:41,756:INFO:Copying training dataset
2023-04-16 03:04:41,757:INFO:Defining folds
2023-04-16 03:04:41,757:INFO:Declaring metric variables
2023-04-16 03:04:41,757:INFO:Importing untrained model
2023-04-16 03:04:41,757:INFO:Bayesian Ridge Imported successfully
2023-04-16 03:04:41,758:INFO:Starting cross validation
2023-04-16 03:04:41,758:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:04:41,917:INFO:Calculating mean and std
2023-04-16 03:04:41,917:INFO:Creating metrics dataframe
2023-04-16 03:04:41,920:INFO:Uploading results into container
2023-04-16 03:04:41,920:INFO:Uploading model into container now
2023-04-16 03:04:41,920:INFO:_master_model_container: 8
2023-04-16 03:04:41,920:INFO:_display_container: 2
2023-04-16 03:04:41,920:INFO:BayesianRidge()
2023-04-16 03:04:41,920:INFO:create_model() successfully completed......................................
2023-04-16 03:04:42,006:INFO:SubProcess create_model() end ==================================
2023-04-16 03:04:42,006:INFO:Creating metrics dataframe
2023-04-16 03:04:42,008:INFO:Initializing Passive Aggressive Regressor
2023-04-16 03:04:42,009:INFO:Total runtime is 0.09740309715270996 minutes
2023-04-16 03:04:42,009:INFO:SubProcess create_model() called ==================================
2023-04-16 03:04:42,009:INFO:Initializing create_model()
2023-04-16 03:04:42,009:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289bb63a0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2893f57f0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:04:42,009:INFO:Checking exceptions
2023-04-16 03:04:42,009:INFO:Importing libraries
2023-04-16 03:04:42,009:INFO:Copying training dataset
2023-04-16 03:04:42,010:INFO:Defining folds
2023-04-16 03:04:42,010:INFO:Declaring metric variables
2023-04-16 03:04:42,010:INFO:Importing untrained model
2023-04-16 03:04:42,010:INFO:Passive Aggressive Regressor Imported successfully
2023-04-16 03:04:42,010:INFO:Starting cross validation
2023-04-16 03:04:42,011:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:04:42,174:INFO:Calculating mean and std
2023-04-16 03:04:42,174:INFO:Creating metrics dataframe
2023-04-16 03:04:42,176:INFO:Uploading results into container
2023-04-16 03:04:42,177:INFO:Uploading model into container now
2023-04-16 03:04:42,177:INFO:_master_model_container: 9
2023-04-16 03:04:42,177:INFO:_display_container: 2
2023-04-16 03:04:42,177:INFO:PassiveAggressiveRegressor(random_state=1762)
2023-04-16 03:04:42,177:INFO:create_model() successfully completed......................................
2023-04-16 03:04:42,283:INFO:SubProcess create_model() end ==================================
2023-04-16 03:04:42,283:INFO:Creating metrics dataframe
2023-04-16 03:04:42,286:INFO:Initializing Huber Regressor
2023-04-16 03:04:42,286:INFO:Total runtime is 0.10202293395996094 minutes
2023-04-16 03:04:42,286:INFO:SubProcess create_model() called ==================================
2023-04-16 03:04:42,286:INFO:Initializing create_model()
2023-04-16 03:04:42,286:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289bb63a0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2893f57f0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:04:42,286:INFO:Checking exceptions
2023-04-16 03:04:42,286:INFO:Importing libraries
2023-04-16 03:04:42,286:INFO:Copying training dataset
2023-04-16 03:04:42,287:INFO:Defining folds
2023-04-16 03:04:42,287:INFO:Declaring metric variables
2023-04-16 03:04:42,287:INFO:Importing untrained model
2023-04-16 03:04:42,288:INFO:Huber Regressor Imported successfully
2023-04-16 03:04:42,288:INFO:Starting cross validation
2023-04-16 03:04:42,288:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:04:42,404:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-04-16 03:04:42,479:INFO:Calculating mean and std
2023-04-16 03:04:42,479:INFO:Creating metrics dataframe
2023-04-16 03:04:42,481:INFO:Uploading results into container
2023-04-16 03:04:42,481:INFO:Uploading model into container now
2023-04-16 03:04:42,481:INFO:_master_model_container: 10
2023-04-16 03:04:42,481:INFO:_display_container: 2
2023-04-16 03:04:42,481:INFO:HuberRegressor()
2023-04-16 03:04:42,481:INFO:create_model() successfully completed......................................
2023-04-16 03:04:42,562:INFO:SubProcess create_model() end ==================================
2023-04-16 03:04:42,562:INFO:Creating metrics dataframe
2023-04-16 03:04:42,564:INFO:Initializing K Neighbors Regressor
2023-04-16 03:04:42,564:INFO:Total runtime is 0.10665631691614787 minutes
2023-04-16 03:04:42,564:INFO:SubProcess create_model() called ==================================
2023-04-16 03:04:42,564:INFO:Initializing create_model()
2023-04-16 03:04:42,564:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289bb63a0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2893f57f0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:04:42,564:INFO:Checking exceptions
2023-04-16 03:04:42,564:INFO:Importing libraries
2023-04-16 03:04:42,564:INFO:Copying training dataset
2023-04-16 03:04:42,565:INFO:Defining folds
2023-04-16 03:04:42,565:INFO:Declaring metric variables
2023-04-16 03:04:42,566:INFO:Importing untrained model
2023-04-16 03:04:42,566:INFO:K Neighbors Regressor Imported successfully
2023-04-16 03:04:42,566:INFO:Starting cross validation
2023-04-16 03:04:42,566:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:04:42,722:INFO:Calculating mean and std
2023-04-16 03:04:42,722:INFO:Creating metrics dataframe
2023-04-16 03:04:42,724:INFO:Uploading results into container
2023-04-16 03:04:42,724:INFO:Uploading model into container now
2023-04-16 03:04:42,724:INFO:_master_model_container: 11
2023-04-16 03:04:42,724:INFO:_display_container: 2
2023-04-16 03:04:42,725:INFO:KNeighborsRegressor(n_jobs=-1)
2023-04-16 03:04:42,725:INFO:create_model() successfully completed......................................
2023-04-16 03:04:42,802:INFO:SubProcess create_model() end ==================================
2023-04-16 03:04:42,802:INFO:Creating metrics dataframe
2023-04-16 03:04:42,804:INFO:Initializing Decision Tree Regressor
2023-04-16 03:04:42,804:INFO:Total runtime is 0.11066504716873168 minutes
2023-04-16 03:04:42,804:INFO:SubProcess create_model() called ==================================
2023-04-16 03:04:42,804:INFO:Initializing create_model()
2023-04-16 03:04:42,804:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289bb63a0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2893f57f0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:04:42,804:INFO:Checking exceptions
2023-04-16 03:04:42,804:INFO:Importing libraries
2023-04-16 03:04:42,805:INFO:Copying training dataset
2023-04-16 03:04:42,806:INFO:Defining folds
2023-04-16 03:04:42,806:INFO:Declaring metric variables
2023-04-16 03:04:42,806:INFO:Importing untrained model
2023-04-16 03:04:42,806:INFO:Decision Tree Regressor Imported successfully
2023-04-16 03:04:42,807:INFO:Starting cross validation
2023-04-16 03:04:42,807:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:04:42,968:INFO:Calculating mean and std
2023-04-16 03:04:42,968:INFO:Creating metrics dataframe
2023-04-16 03:04:42,970:INFO:Uploading results into container
2023-04-16 03:04:42,970:INFO:Uploading model into container now
2023-04-16 03:04:42,971:INFO:_master_model_container: 12
2023-04-16 03:04:42,971:INFO:_display_container: 2
2023-04-16 03:04:42,971:INFO:DecisionTreeRegressor(random_state=1762)
2023-04-16 03:04:42,971:INFO:create_model() successfully completed......................................
2023-04-16 03:04:43,054:INFO:SubProcess create_model() end ==================================
2023-04-16 03:04:43,054:INFO:Creating metrics dataframe
2023-04-16 03:04:43,057:INFO:Initializing Random Forest Regressor
2023-04-16 03:04:43,057:INFO:Total runtime is 0.11487040122350056 minutes
2023-04-16 03:04:43,057:INFO:SubProcess create_model() called ==================================
2023-04-16 03:04:43,057:INFO:Initializing create_model()
2023-04-16 03:04:43,057:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289bb63a0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2893f57f0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:04:43,057:INFO:Checking exceptions
2023-04-16 03:04:43,057:INFO:Importing libraries
2023-04-16 03:04:43,057:INFO:Copying training dataset
2023-04-16 03:04:43,058:INFO:Defining folds
2023-04-16 03:04:43,059:INFO:Declaring metric variables
2023-04-16 03:04:43,059:INFO:Importing untrained model
2023-04-16 03:04:43,059:INFO:Random Forest Regressor Imported successfully
2023-04-16 03:04:43,059:INFO:Starting cross validation
2023-04-16 03:04:43,059:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:04:43,883:INFO:Calculating mean and std
2023-04-16 03:04:43,883:INFO:Creating metrics dataframe
2023-04-16 03:04:43,887:INFO:Uploading results into container
2023-04-16 03:04:43,888:INFO:Uploading model into container now
2023-04-16 03:04:43,888:INFO:_master_model_container: 13
2023-04-16 03:04:43,888:INFO:_display_container: 2
2023-04-16 03:04:43,888:INFO:RandomForestRegressor(n_jobs=-1, random_state=1762)
2023-04-16 03:04:43,888:INFO:create_model() successfully completed......................................
2023-04-16 03:04:43,971:INFO:SubProcess create_model() end ==================================
2023-04-16 03:04:43,971:INFO:Creating metrics dataframe
2023-04-16 03:04:43,973:INFO:Initializing Extra Trees Regressor
2023-04-16 03:04:43,973:INFO:Total runtime is 0.13014221588770547 minutes
2023-04-16 03:04:43,973:INFO:SubProcess create_model() called ==================================
2023-04-16 03:04:43,973:INFO:Initializing create_model()
2023-04-16 03:04:43,973:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289bb63a0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2893f57f0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:04:43,973:INFO:Checking exceptions
2023-04-16 03:04:43,973:INFO:Importing libraries
2023-04-16 03:04:43,973:INFO:Copying training dataset
2023-04-16 03:04:43,974:INFO:Defining folds
2023-04-16 03:04:43,974:INFO:Declaring metric variables
2023-04-16 03:04:43,974:INFO:Importing untrained model
2023-04-16 03:04:43,975:INFO:Extra Trees Regressor Imported successfully
2023-04-16 03:04:43,975:INFO:Starting cross validation
2023-04-16 03:04:43,975:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:04:44,593:INFO:Calculating mean and std
2023-04-16 03:04:44,594:INFO:Creating metrics dataframe
2023-04-16 03:04:44,601:INFO:Uploading results into container
2023-04-16 03:04:44,601:INFO:Uploading model into container now
2023-04-16 03:04:44,601:INFO:_master_model_container: 14
2023-04-16 03:04:44,601:INFO:_display_container: 2
2023-04-16 03:04:44,602:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1762)
2023-04-16 03:04:44,602:INFO:create_model() successfully completed......................................
2023-04-16 03:04:44,686:INFO:SubProcess create_model() end ==================================
2023-04-16 03:04:44,686:INFO:Creating metrics dataframe
2023-04-16 03:04:44,688:INFO:Initializing AdaBoost Regressor
2023-04-16 03:04:44,688:INFO:Total runtime is 0.14205728371938067 minutes
2023-04-16 03:04:44,688:INFO:SubProcess create_model() called ==================================
2023-04-16 03:04:44,688:INFO:Initializing create_model()
2023-04-16 03:04:44,688:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289bb63a0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2893f57f0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:04:44,688:INFO:Checking exceptions
2023-04-16 03:04:44,688:INFO:Importing libraries
2023-04-16 03:04:44,688:INFO:Copying training dataset
2023-04-16 03:04:44,689:INFO:Defining folds
2023-04-16 03:04:44,689:INFO:Declaring metric variables
2023-04-16 03:04:44,689:INFO:Importing untrained model
2023-04-16 03:04:44,689:INFO:AdaBoost Regressor Imported successfully
2023-04-16 03:04:44,690:INFO:Starting cross validation
2023-04-16 03:04:44,690:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:04:45,019:INFO:Calculating mean and std
2023-04-16 03:04:45,019:INFO:Creating metrics dataframe
2023-04-16 03:04:45,024:INFO:Uploading results into container
2023-04-16 03:04:45,024:INFO:Uploading model into container now
2023-04-16 03:04:45,024:INFO:_master_model_container: 15
2023-04-16 03:04:45,024:INFO:_display_container: 2
2023-04-16 03:04:45,024:INFO:AdaBoostRegressor(random_state=1762)
2023-04-16 03:04:45,024:INFO:create_model() successfully completed......................................
2023-04-16 03:04:45,105:INFO:SubProcess create_model() end ==================================
2023-04-16 03:04:45,106:INFO:Creating metrics dataframe
2023-04-16 03:04:45,108:INFO:Initializing Gradient Boosting Regressor
2023-04-16 03:04:45,108:INFO:Total runtime is 0.14905844926834105 minutes
2023-04-16 03:04:45,108:INFO:SubProcess create_model() called ==================================
2023-04-16 03:04:45,108:INFO:Initializing create_model()
2023-04-16 03:04:45,108:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289bb63a0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2893f57f0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:04:45,108:INFO:Checking exceptions
2023-04-16 03:04:45,108:INFO:Importing libraries
2023-04-16 03:04:45,108:INFO:Copying training dataset
2023-04-16 03:04:45,109:INFO:Defining folds
2023-04-16 03:04:45,109:INFO:Declaring metric variables
2023-04-16 03:04:45,110:INFO:Importing untrained model
2023-04-16 03:04:45,110:INFO:Gradient Boosting Regressor Imported successfully
2023-04-16 03:04:45,110:INFO:Starting cross validation
2023-04-16 03:04:45,110:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:04:45,609:INFO:Calculating mean and std
2023-04-16 03:04:45,609:INFO:Creating metrics dataframe
2023-04-16 03:04:45,616:INFO:Uploading results into container
2023-04-16 03:04:45,616:INFO:Uploading model into container now
2023-04-16 03:04:45,616:INFO:_master_model_container: 16
2023-04-16 03:04:45,616:INFO:_display_container: 2
2023-04-16 03:04:45,617:INFO:GradientBoostingRegressor(random_state=1762)
2023-04-16 03:04:45,617:INFO:create_model() successfully completed......................................
2023-04-16 03:04:45,711:INFO:SubProcess create_model() end ==================================
2023-04-16 03:04:45,711:INFO:Creating metrics dataframe
2023-04-16 03:04:45,713:INFO:Initializing Light Gradient Boosting Machine
2023-04-16 03:04:45,713:INFO:Total runtime is 0.15913960138956704 minutes
2023-04-16 03:04:45,713:INFO:SubProcess create_model() called ==================================
2023-04-16 03:04:45,713:INFO:Initializing create_model()
2023-04-16 03:04:45,713:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289bb63a0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2893f57f0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:04:45,713:INFO:Checking exceptions
2023-04-16 03:04:45,713:INFO:Importing libraries
2023-04-16 03:04:45,713:INFO:Copying training dataset
2023-04-16 03:04:45,714:INFO:Defining folds
2023-04-16 03:04:45,714:INFO:Declaring metric variables
2023-04-16 03:04:45,714:INFO:Importing untrained model
2023-04-16 03:04:45,715:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-16 03:04:45,715:INFO:Starting cross validation
2023-04-16 03:04:45,715:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:04:46,022:INFO:Calculating mean and std
2023-04-16 03:04:46,022:INFO:Creating metrics dataframe
2023-04-16 03:04:46,028:INFO:Uploading results into container
2023-04-16 03:04:46,029:INFO:Uploading model into container now
2023-04-16 03:04:46,029:INFO:_master_model_container: 17
2023-04-16 03:04:46,029:INFO:_display_container: 2
2023-04-16 03:04:46,029:INFO:LGBMRegressor(random_state=1762)
2023-04-16 03:04:46,029:INFO:create_model() successfully completed......................................
2023-04-16 03:04:46,108:INFO:SubProcess create_model() end ==================================
2023-04-16 03:04:46,108:INFO:Creating metrics dataframe
2023-04-16 03:04:46,110:INFO:Initializing Dummy Regressor
2023-04-16 03:04:46,110:INFO:Total runtime is 0.16575821638107296 minutes
2023-04-16 03:04:46,110:INFO:SubProcess create_model() called ==================================
2023-04-16 03:04:46,110:INFO:Initializing create_model()
2023-04-16 03:04:46,110:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289bb63a0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2893f57f0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:04:46,110:INFO:Checking exceptions
2023-04-16 03:04:46,110:INFO:Importing libraries
2023-04-16 03:04:46,110:INFO:Copying training dataset
2023-04-16 03:04:46,111:INFO:Defining folds
2023-04-16 03:04:46,111:INFO:Declaring metric variables
2023-04-16 03:04:46,112:INFO:Importing untrained model
2023-04-16 03:04:46,112:INFO:Dummy Regressor Imported successfully
2023-04-16 03:04:46,112:INFO:Starting cross validation
2023-04-16 03:04:46,112:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:04:46,263:INFO:Calculating mean and std
2023-04-16 03:04:46,263:INFO:Creating metrics dataframe
2023-04-16 03:04:46,270:INFO:Uploading results into container
2023-04-16 03:04:46,271:INFO:Uploading model into container now
2023-04-16 03:04:46,271:INFO:_master_model_container: 18
2023-04-16 03:04:46,271:INFO:_display_container: 2
2023-04-16 03:04:46,271:INFO:DummyRegressor()
2023-04-16 03:04:46,271:INFO:create_model() successfully completed......................................
2023-04-16 03:04:46,348:INFO:SubProcess create_model() end ==================================
2023-04-16 03:04:46,348:INFO:Creating metrics dataframe
2023-04-16 03:04:46,350:INFO:Initializing create_model()
2023-04-16 03:04:46,350:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289bb63a0>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:04:46,351:INFO:Checking exceptions
2023-04-16 03:04:46,351:INFO:Importing libraries
2023-04-16 03:04:46,351:INFO:Copying training dataset
2023-04-16 03:04:46,352:INFO:Defining folds
2023-04-16 03:04:46,352:INFO:Declaring metric variables
2023-04-16 03:04:46,352:INFO:Importing untrained model
2023-04-16 03:04:46,352:INFO:Declaring custom model
2023-04-16 03:04:46,352:INFO:Linear Regression Imported successfully
2023-04-16 03:04:46,353:INFO:Cross validation set to False
2023-04-16 03:04:46,353:INFO:Fitting Model
2023-04-16 03:04:46,383:INFO:LinearRegression(n_jobs=-1)
2023-04-16 03:04:46,383:INFO:create_model() successfully completed......................................
2023-04-16 03:04:46,463:INFO:_master_model_container: 18
2023-04-16 03:04:46,463:INFO:_display_container: 2
2023-04-16 03:04:46,463:INFO:LinearRegression(n_jobs=-1)
2023-04-16 03:04:46,463:INFO:compare_models() successfully completed......................................
2023-04-16 03:04:46,483:INFO:Initializing save_model()
2023-04-16 03:04:46,483:INFO:save_model(model=LinearRegression(n_jobs=-1), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/6h/lc7qdbvj2pj7j5w_bscg4wb40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Local time'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Local time'],
                                    transformer=LeaveOneOutEncoder(cols=['Local '
                                                                         'time'],
                                                                   handle_missing='return_nan',
                                                                   random_state=1762))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2023-04-16 03:04:46,483:INFO:Adding model into prep_pipe
2023-04-16 03:04:46,487:INFO:best_model.pkl saved in current working directory
2023-04-16 03:04:46,491:INFO:Pipeline(memory=FastMemory(location=/var/folders/6h/lc7qdbvj2pj7j5w_bscg4wb40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Local time'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Local time'],
                                    transformer=LeaveOneOutEncoder(cols=['Local '
                                                                         'time'],
                                                                   handle_missing='return_nan',
                                                                   random_state=1762))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LinearRegression(n_jobs=-1))])
2023-04-16 03:04:46,491:INFO:save_model() successfully completed......................................
2023-04-16 03:51:10,571:INFO:PyCaret RegressionExperiment
2023-04-16 03:51:10,571:INFO:Logging name: reg-default-name
2023-04-16 03:51:10,571:INFO:ML Usecase: MLUsecase.REGRESSION
2023-04-16 03:51:10,571:INFO:version 3.0.0
2023-04-16 03:51:10,571:INFO:Initializing setup()
2023-04-16 03:51:10,571:INFO:self.USI: 1e4a
2023-04-16 03:51:10,571:INFO:self._variable_keys: {'n_jobs_param', 'seed', '_ml_usecase', 'idx', 'gpu_n_jobs_param', 'y', 'y_train', 'fold_groups_param', 'X', 'fold_generator', 'exp_id', 'X_train', 'html_param', 'memory', 'pipeline', '_available_plots', 'transform_target_param', 'exp_name_log', 'fold_shuffle_param', 'data', 'USI', 'X_test', 'gpu_param', 'y_test', 'logging_param', 'log_plots_param', 'target_param'}
2023-04-16 03:51:10,572:INFO:Checking environment
2023-04-16 03:51:10,572:INFO:python_version: 3.9.13
2023-04-16 03:51:10,572:INFO:python_build: ('main', 'Aug 28 2022 18:56:22')
2023-04-16 03:51:10,572:INFO:machine: arm64
2023-04-16 03:51:10,572:INFO:platform: macOS-13.0.1-arm64-arm-64bit
2023-04-16 03:51:10,573:INFO:Memory: svmem(total=8589934592, available=1873346560, percent=78.2, used=3156819968, free=380895232, active=1498513408, inactive=1300807680, wired=1658306560)
2023-04-16 03:51:10,573:INFO:Physical Core: 8
2023-04-16 03:51:10,573:INFO:Logical Core: 8
2023-04-16 03:51:10,573:INFO:Checking libraries
2023-04-16 03:51:10,573:INFO:System:
2023-04-16 03:51:10,573:INFO:    python: 3.9.13 (main, Aug 28 2022, 18:56:22)  [Clang 13.1.6 (clang-1316.0.21.2.5)]
2023-04-16 03:51:10,573:INFO:executable: /opt/homebrew/opt/python@3.9/bin/python3.9
2023-04-16 03:51:10,573:INFO:   machine: macOS-13.0.1-arm64-arm-64bit
2023-04-16 03:51:10,573:INFO:PyCaret required dependencies:
2023-04-16 03:51:10,573:INFO:                 pip: 23.1
2023-04-16 03:51:10,573:INFO:          setuptools: 63.4.3
2023-04-16 03:51:10,573:INFO:             pycaret: 3.0.0
2023-04-16 03:51:10,573:INFO:             IPython: 8.4.0
2023-04-16 03:51:10,573:INFO:          ipywidgets: 8.0.6
2023-04-16 03:51:10,573:INFO:                tqdm: 4.64.1
2023-04-16 03:51:10,573:INFO:               numpy: 1.22.4
2023-04-16 03:51:10,573:INFO:              pandas: 1.5.3
2023-04-16 03:51:10,573:INFO:              jinja2: 3.1.2
2023-04-16 03:51:10,573:INFO:               scipy: 1.9.3
2023-04-16 03:51:10,573:INFO:              joblib: 1.2.0
2023-04-16 03:51:10,573:INFO:             sklearn: 1.2.2
2023-04-16 03:51:10,573:INFO:                pyod: 1.0.9
2023-04-16 03:51:10,573:INFO:            imblearn: 0.10.1
2023-04-16 03:51:10,573:INFO:   category_encoders: 2.6.0
2023-04-16 03:51:10,573:INFO:            lightgbm: 3.3.5
2023-04-16 03:51:10,573:INFO:               numba: 0.56.4
2023-04-16 03:51:10,573:INFO:            requests: 2.27.1
2023-04-16 03:51:10,573:INFO:          matplotlib: 3.6.3
2023-04-16 03:51:10,573:INFO:          scikitplot: 0.3.7
2023-04-16 03:51:10,573:INFO:         yellowbrick: 1.5
2023-04-16 03:51:10,573:INFO:              plotly: 5.14.1
2023-04-16 03:51:10,573:INFO:             kaleido: 0.2.1
2023-04-16 03:51:10,573:INFO:         statsmodels: 0.13.5
2023-04-16 03:51:10,573:INFO:              sktime: 0.17.1
2023-04-16 03:51:10,573:INFO:               tbats: 1.1.2
2023-04-16 03:51:10,573:INFO:            pmdarima: 2.0.3
2023-04-16 03:51:10,573:INFO:              psutil: 5.9.1
2023-04-16 03:51:10,573:INFO:PyCaret optional dependencies:
2023-04-16 03:51:10,573:INFO:                shap: Not installed
2023-04-16 03:51:10,574:INFO:           interpret: Not installed
2023-04-16 03:51:10,574:INFO:                umap: Not installed
2023-04-16 03:51:10,574:INFO:    pandas_profiling: 4.1.2
2023-04-16 03:51:10,574:INFO:  explainerdashboard: Not installed
2023-04-16 03:51:10,574:INFO:             autoviz: Not installed
2023-04-16 03:51:10,574:INFO:           fairlearn: Not installed
2023-04-16 03:51:10,574:INFO:             xgboost: Not installed
2023-04-16 03:51:10,574:INFO:            catboost: Not installed
2023-04-16 03:51:10,574:INFO:              kmodes: Not installed
2023-04-16 03:51:10,574:INFO:             mlxtend: Not installed
2023-04-16 03:51:10,574:INFO:       statsforecast: Not installed
2023-04-16 03:51:10,574:INFO:        tune_sklearn: Not installed
2023-04-16 03:51:10,574:INFO:                 ray: Not installed
2023-04-16 03:51:10,574:INFO:            hyperopt: Not installed
2023-04-16 03:51:10,574:INFO:              optuna: Not installed
2023-04-16 03:51:10,574:INFO:               skopt: Not installed
2023-04-16 03:51:10,574:INFO:              mlflow: Not installed
2023-04-16 03:51:10,574:INFO:              gradio: Not installed
2023-04-16 03:51:10,574:INFO:             fastapi: Not installed
2023-04-16 03:51:10,574:INFO:             uvicorn: Not installed
2023-04-16 03:51:10,574:INFO:              m2cgen: Not installed
2023-04-16 03:51:10,574:INFO:           evidently: Not installed
2023-04-16 03:51:10,574:INFO:               fugue: Not installed
2023-04-16 03:51:10,574:INFO:           streamlit: 1.21.0
2023-04-16 03:51:10,574:INFO:             prophet: Not installed
2023-04-16 03:51:10,574:INFO:None
2023-04-16 03:51:10,574:INFO:Set up data.
2023-04-16 03:51:10,580:INFO:Set up train/test split.
2023-04-16 03:51:10,586:INFO:Set up index.
2023-04-16 03:51:10,586:INFO:Set up folding strategy.
2023-04-16 03:51:10,586:INFO:Assigning column types.
2023-04-16 03:51:10,588:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-16 03:51:10,588:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-04-16 03:51:10,591:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-04-16 03:51:10,594:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-04-16 03:51:10,627:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-04-16 03:51:10,646:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-16 03:51:10,647:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:51:10,647:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:51:10,647:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-04-16 03:51:10,649:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-04-16 03:51:10,651:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-04-16 03:51:10,674:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-04-16 03:51:10,693:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-16 03:51:10,693:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:51:10,693:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:51:10,693:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-04-16 03:51:10,695:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-04-16 03:51:10,697:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-04-16 03:51:10,722:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-04-16 03:51:10,741:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-16 03:51:10,741:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:51:10,741:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:51:10,743:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-04-16 03:51:10,745:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-04-16 03:51:10,769:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-04-16 03:51:10,787:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-16 03:51:10,788:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:51:10,788:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:51:10,788:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-04-16 03:51:10,792:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-04-16 03:51:10,815:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-04-16 03:51:10,834:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-16 03:51:10,834:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:51:10,834:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:51:10,838:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-04-16 03:51:10,861:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-04-16 03:51:10,880:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-16 03:51:10,881:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:51:10,881:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:51:10,881:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-04-16 03:51:10,908:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-04-16 03:51:10,927:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-16 03:51:10,927:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:51:10,927:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:51:10,955:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-04-16 03:51:10,973:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-16 03:51:10,973:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:51:10,974:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:51:10,974:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-16 03:51:11,001:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-04-16 03:51:11,020:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:51:11,020:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:51:11,048:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-04-16 03:51:11,067:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:51:11,067:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:51:11,067:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-04-16 03:51:11,113:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:51:11,113:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:51:11,159:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:51:11,159:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:51:11,159:INFO:Preparing preprocessing pipeline...
2023-04-16 03:51:11,159:INFO:Set up simple imputation.
2023-04-16 03:51:11,161:INFO:Set up encoding of categorical features.
2023-04-16 03:51:11,161:INFO:Set up column name cleaning.
2023-04-16 03:51:11,190:INFO:Finished creating preprocessing pipeline.
2023-04-16 03:51:11,193:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/6h/lc7qdbvj2pj7j5w_bscg4wb40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Local time'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Local time'],
                                    transformer=LeaveOneOutEncoder(cols=['Local '
                                                                         'time'],
                                                                   handle_missing='return_nan',
                                                                   random_state=3383))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-04-16 03:51:11,193:INFO:Creating final display dataframe.
2023-04-16 03:51:11,259:INFO:Setup _display_container:                     Description             Value
0                    Session id              3383
1                        Target             Close
2                   Target type        Regression
3           Original data shape         (1840, 6)
4        Transformed data shape         (1840, 6)
5   Transformed train set shape         (1288, 6)
6    Transformed test set shape          (552, 6)
7              Numeric features                 4
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              1e4a
2023-04-16 03:51:11,310:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:51:11,310:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:51:11,356:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:51:11,356:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:51:11,356:INFO:setup() successfully completed in 0.79s...............
2023-04-16 03:51:11,376:INFO:Initializing compare_models()
2023-04-16 03:51:11,376:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x28be10ca0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x28be10ca0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-04-16 03:51:11,376:INFO:Checking exceptions
2023-04-16 03:51:11,377:INFO:Preparing display monitor
2023-04-16 03:51:11,378:INFO:Initializing Linear Regression
2023-04-16 03:51:11,379:INFO:Total runtime is 7.152557373046875e-07 minutes
2023-04-16 03:51:11,379:INFO:SubProcess create_model() called ==================================
2023-04-16 03:51:11,379:INFO:Initializing create_model()
2023-04-16 03:51:11,379:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28be10ca0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28925e0a0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:51:11,379:INFO:Checking exceptions
2023-04-16 03:51:11,379:INFO:Importing libraries
2023-04-16 03:51:11,379:INFO:Copying training dataset
2023-04-16 03:51:11,380:INFO:Defining folds
2023-04-16 03:51:11,380:INFO:Declaring metric variables
2023-04-16 03:51:11,380:INFO:Importing untrained model
2023-04-16 03:51:11,380:INFO:Linear Regression Imported successfully
2023-04-16 03:51:11,380:INFO:Starting cross validation
2023-04-16 03:51:11,381:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:51:15,213:INFO:Calculating mean and std
2023-04-16 03:51:15,214:INFO:Creating metrics dataframe
2023-04-16 03:51:15,225:INFO:Uploading results into container
2023-04-16 03:51:15,228:INFO:Uploading model into container now
2023-04-16 03:51:15,229:INFO:_master_model_container: 1
2023-04-16 03:51:15,229:INFO:_display_container: 2
2023-04-16 03:51:15,229:INFO:LinearRegression(n_jobs=-1)
2023-04-16 03:51:15,230:INFO:create_model() successfully completed......................................
2023-04-16 03:51:15,387:INFO:SubProcess create_model() end ==================================
2023-04-16 03:51:15,387:INFO:Creating metrics dataframe
2023-04-16 03:51:15,389:INFO:Initializing Lasso Regression
2023-04-16 03:51:15,389:INFO:Total runtime is 0.06684348185857138 minutes
2023-04-16 03:51:15,389:INFO:SubProcess create_model() called ==================================
2023-04-16 03:51:15,389:INFO:Initializing create_model()
2023-04-16 03:51:15,389:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28be10ca0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28925e0a0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:51:15,389:INFO:Checking exceptions
2023-04-16 03:51:15,389:INFO:Importing libraries
2023-04-16 03:51:15,390:INFO:Copying training dataset
2023-04-16 03:51:15,391:INFO:Defining folds
2023-04-16 03:51:15,391:INFO:Declaring metric variables
2023-04-16 03:51:15,391:INFO:Importing untrained model
2023-04-16 03:51:15,391:INFO:Lasso Regression Imported successfully
2023-04-16 03:51:15,391:INFO:Starting cross validation
2023-04-16 03:51:15,392:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:51:15,485:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.233e+08, tolerance: 3.150e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:51:15,485:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.226e+08, tolerance: 3.237e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:51:15,504:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.255e+08, tolerance: 3.265e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:51:15,512:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.240e+08, tolerance: 3.171e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:51:15,531:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.215e+08, tolerance: 3.245e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:51:15,544:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.198e+08, tolerance: 3.215e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:51:15,545:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.204e+08, tolerance: 3.183e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:51:15,551:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.142e+08, tolerance: 3.188e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:51:15,561:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.251e+08, tolerance: 3.227e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:51:15,588:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.217e+08, tolerance: 3.235e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:51:15,604:INFO:Calculating mean and std
2023-04-16 03:51:15,604:INFO:Creating metrics dataframe
2023-04-16 03:51:15,610:INFO:Uploading results into container
2023-04-16 03:51:15,610:INFO:Uploading model into container now
2023-04-16 03:51:15,610:INFO:_master_model_container: 2
2023-04-16 03:51:15,610:INFO:_display_container: 2
2023-04-16 03:51:15,610:INFO:Lasso(random_state=3383)
2023-04-16 03:51:15,610:INFO:create_model() successfully completed......................................
2023-04-16 03:51:15,689:INFO:SubProcess create_model() end ==================================
2023-04-16 03:51:15,689:INFO:Creating metrics dataframe
2023-04-16 03:51:15,691:INFO:Initializing Ridge Regression
2023-04-16 03:51:15,691:INFO:Total runtime is 0.0718733827273051 minutes
2023-04-16 03:51:15,691:INFO:SubProcess create_model() called ==================================
2023-04-16 03:51:15,691:INFO:Initializing create_model()
2023-04-16 03:51:15,691:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28be10ca0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28925e0a0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:51:15,691:INFO:Checking exceptions
2023-04-16 03:51:15,691:INFO:Importing libraries
2023-04-16 03:51:15,691:INFO:Copying training dataset
2023-04-16 03:51:15,692:INFO:Defining folds
2023-04-16 03:51:15,692:INFO:Declaring metric variables
2023-04-16 03:51:15,692:INFO:Importing untrained model
2023-04-16 03:51:15,693:INFO:Ridge Regression Imported successfully
2023-04-16 03:51:15,693:INFO:Starting cross validation
2023-04-16 03:51:15,693:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:51:15,844:INFO:Calculating mean and std
2023-04-16 03:51:15,845:INFO:Creating metrics dataframe
2023-04-16 03:51:15,851:INFO:Uploading results into container
2023-04-16 03:51:15,852:INFO:Uploading model into container now
2023-04-16 03:51:15,852:INFO:_master_model_container: 3
2023-04-16 03:51:15,852:INFO:_display_container: 2
2023-04-16 03:51:15,852:INFO:Ridge(random_state=3383)
2023-04-16 03:51:15,852:INFO:create_model() successfully completed......................................
2023-04-16 03:51:15,931:INFO:SubProcess create_model() end ==================================
2023-04-16 03:51:15,932:INFO:Creating metrics dataframe
2023-04-16 03:51:15,933:INFO:Initializing Elastic Net
2023-04-16 03:51:15,933:INFO:Total runtime is 0.07591673135757447 minutes
2023-04-16 03:51:15,934:INFO:SubProcess create_model() called ==================================
2023-04-16 03:51:15,934:INFO:Initializing create_model()
2023-04-16 03:51:15,934:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28be10ca0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28925e0a0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:51:15,934:INFO:Checking exceptions
2023-04-16 03:51:15,934:INFO:Importing libraries
2023-04-16 03:51:15,934:INFO:Copying training dataset
2023-04-16 03:51:15,935:INFO:Defining folds
2023-04-16 03:51:15,935:INFO:Declaring metric variables
2023-04-16 03:51:15,935:INFO:Importing untrained model
2023-04-16 03:51:15,935:INFO:Elastic Net Imported successfully
2023-04-16 03:51:15,935:INFO:Starting cross validation
2023-04-16 03:51:15,936:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:51:15,984:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.226e+08, tolerance: 3.237e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:51:15,987:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.233e+08, tolerance: 3.150e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:51:16,004:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.255e+08, tolerance: 3.265e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:51:16,007:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.240e+08, tolerance: 3.171e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:51:16,025:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.198e+08, tolerance: 3.215e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:51:16,036:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.215e+08, tolerance: 3.245e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:51:16,052:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.142e+08, tolerance: 3.188e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:51:16,063:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.204e+08, tolerance: 3.183e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:51:16,072:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.251e+08, tolerance: 3.227e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:51:16,084:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.217e+08, tolerance: 3.235e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:51:16,100:INFO:Calculating mean and std
2023-04-16 03:51:16,100:INFO:Creating metrics dataframe
2023-04-16 03:51:16,107:INFO:Uploading results into container
2023-04-16 03:51:16,108:INFO:Uploading model into container now
2023-04-16 03:51:16,108:INFO:_master_model_container: 4
2023-04-16 03:51:16,108:INFO:_display_container: 2
2023-04-16 03:51:16,108:INFO:ElasticNet(random_state=3383)
2023-04-16 03:51:16,108:INFO:create_model() successfully completed......................................
2023-04-16 03:51:16,189:INFO:SubProcess create_model() end ==================================
2023-04-16 03:51:16,189:INFO:Creating metrics dataframe
2023-04-16 03:51:16,191:INFO:Initializing Least Angle Regression
2023-04-16 03:51:16,191:INFO:Total runtime is 0.08020513455073039 minutes
2023-04-16 03:51:16,191:INFO:SubProcess create_model() called ==================================
2023-04-16 03:51:16,191:INFO:Initializing create_model()
2023-04-16 03:51:16,191:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28be10ca0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28925e0a0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:51:16,191:INFO:Checking exceptions
2023-04-16 03:51:16,191:INFO:Importing libraries
2023-04-16 03:51:16,191:INFO:Copying training dataset
2023-04-16 03:51:16,192:INFO:Defining folds
2023-04-16 03:51:16,192:INFO:Declaring metric variables
2023-04-16 03:51:16,192:INFO:Importing untrained model
2023-04-16 03:51:16,192:INFO:Least Angle Regression Imported successfully
2023-04-16 03:51:16,193:INFO:Starting cross validation
2023-04-16 03:51:16,193:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:51:16,366:INFO:Calculating mean and std
2023-04-16 03:51:16,367:INFO:Creating metrics dataframe
2023-04-16 03:51:16,373:INFO:Uploading results into container
2023-04-16 03:51:16,374:INFO:Uploading model into container now
2023-04-16 03:51:16,374:INFO:_master_model_container: 5
2023-04-16 03:51:16,374:INFO:_display_container: 2
2023-04-16 03:51:16,374:INFO:Lars(random_state=3383)
2023-04-16 03:51:16,374:INFO:create_model() successfully completed......................................
2023-04-16 03:51:16,454:INFO:SubProcess create_model() end ==================================
2023-04-16 03:51:16,454:INFO:Creating metrics dataframe
2023-04-16 03:51:16,456:INFO:Initializing Lasso Least Angle Regression
2023-04-16 03:51:16,456:INFO:Total runtime is 0.0846243659655253 minutes
2023-04-16 03:51:16,456:INFO:SubProcess create_model() called ==================================
2023-04-16 03:51:16,456:INFO:Initializing create_model()
2023-04-16 03:51:16,456:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28be10ca0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28925e0a0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:51:16,456:INFO:Checking exceptions
2023-04-16 03:51:16,456:INFO:Importing libraries
2023-04-16 03:51:16,456:INFO:Copying training dataset
2023-04-16 03:51:16,457:INFO:Defining folds
2023-04-16 03:51:16,457:INFO:Declaring metric variables
2023-04-16 03:51:16,457:INFO:Importing untrained model
2023-04-16 03:51:16,458:INFO:Lasso Least Angle Regression Imported successfully
2023-04-16 03:51:16,458:INFO:Starting cross validation
2023-04-16 03:51:16,458:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:51:16,627:INFO:Calculating mean and std
2023-04-16 03:51:16,628:INFO:Creating metrics dataframe
2023-04-16 03:51:16,636:INFO:Uploading results into container
2023-04-16 03:51:16,636:INFO:Uploading model into container now
2023-04-16 03:51:16,636:INFO:_master_model_container: 6
2023-04-16 03:51:16,636:INFO:_display_container: 2
2023-04-16 03:51:16,637:INFO:LassoLars(random_state=3383)
2023-04-16 03:51:16,637:INFO:create_model() successfully completed......................................
2023-04-16 03:51:16,718:INFO:SubProcess create_model() end ==================================
2023-04-16 03:51:16,718:INFO:Creating metrics dataframe
2023-04-16 03:51:16,720:INFO:Initializing Orthogonal Matching Pursuit
2023-04-16 03:51:16,720:INFO:Total runtime is 0.08903233210245767 minutes
2023-04-16 03:51:16,720:INFO:SubProcess create_model() called ==================================
2023-04-16 03:51:16,721:INFO:Initializing create_model()
2023-04-16 03:51:16,721:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28be10ca0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28925e0a0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:51:16,721:INFO:Checking exceptions
2023-04-16 03:51:16,721:INFO:Importing libraries
2023-04-16 03:51:16,721:INFO:Copying training dataset
2023-04-16 03:51:16,722:INFO:Defining folds
2023-04-16 03:51:16,722:INFO:Declaring metric variables
2023-04-16 03:51:16,722:INFO:Importing untrained model
2023-04-16 03:51:16,722:INFO:Orthogonal Matching Pursuit Imported successfully
2023-04-16 03:51:16,722:INFO:Starting cross validation
2023-04-16 03:51:16,723:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:51:16,883:INFO:Calculating mean and std
2023-04-16 03:51:16,883:INFO:Creating metrics dataframe
2023-04-16 03:51:16,899:INFO:Uploading results into container
2023-04-16 03:51:16,900:INFO:Uploading model into container now
2023-04-16 03:51:16,900:INFO:_master_model_container: 7
2023-04-16 03:51:16,900:INFO:_display_container: 2
2023-04-16 03:51:16,900:INFO:OrthogonalMatchingPursuit()
2023-04-16 03:51:16,900:INFO:create_model() successfully completed......................................
2023-04-16 03:51:16,997:INFO:SubProcess create_model() end ==================================
2023-04-16 03:51:16,997:INFO:Creating metrics dataframe
2023-04-16 03:51:16,999:INFO:Initializing Bayesian Ridge
2023-04-16 03:51:17,000:INFO:Total runtime is 0.0936843991279602 minutes
2023-04-16 03:51:17,000:INFO:SubProcess create_model() called ==================================
2023-04-16 03:51:17,000:INFO:Initializing create_model()
2023-04-16 03:51:17,000:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28be10ca0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28925e0a0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:51:17,000:INFO:Checking exceptions
2023-04-16 03:51:17,000:INFO:Importing libraries
2023-04-16 03:51:17,000:INFO:Copying training dataset
2023-04-16 03:51:17,001:INFO:Defining folds
2023-04-16 03:51:17,001:INFO:Declaring metric variables
2023-04-16 03:51:17,001:INFO:Importing untrained model
2023-04-16 03:51:17,001:INFO:Bayesian Ridge Imported successfully
2023-04-16 03:51:17,001:INFO:Starting cross validation
2023-04-16 03:51:17,002:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:51:17,224:INFO:Calculating mean and std
2023-04-16 03:51:17,224:INFO:Creating metrics dataframe
2023-04-16 03:51:17,233:INFO:Uploading results into container
2023-04-16 03:51:17,234:INFO:Uploading model into container now
2023-04-16 03:51:17,234:INFO:_master_model_container: 8
2023-04-16 03:51:17,234:INFO:_display_container: 2
2023-04-16 03:51:17,234:INFO:BayesianRidge()
2023-04-16 03:51:17,234:INFO:create_model() successfully completed......................................
2023-04-16 03:51:17,369:INFO:SubProcess create_model() end ==================================
2023-04-16 03:51:17,369:INFO:Creating metrics dataframe
2023-04-16 03:51:17,372:INFO:Initializing Passive Aggressive Regressor
2023-04-16 03:51:17,372:INFO:Total runtime is 0.09989158312479654 minutes
2023-04-16 03:51:17,372:INFO:SubProcess create_model() called ==================================
2023-04-16 03:51:17,372:INFO:Initializing create_model()
2023-04-16 03:51:17,372:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28be10ca0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28925e0a0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:51:17,372:INFO:Checking exceptions
2023-04-16 03:51:17,372:INFO:Importing libraries
2023-04-16 03:51:17,372:INFO:Copying training dataset
2023-04-16 03:51:17,374:INFO:Defining folds
2023-04-16 03:51:17,374:INFO:Declaring metric variables
2023-04-16 03:51:17,374:INFO:Importing untrained model
2023-04-16 03:51:17,374:INFO:Passive Aggressive Regressor Imported successfully
2023-04-16 03:51:17,374:INFO:Starting cross validation
2023-04-16 03:51:17,375:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:51:17,619:INFO:Calculating mean and std
2023-04-16 03:51:17,620:INFO:Creating metrics dataframe
2023-04-16 03:51:17,626:INFO:Uploading results into container
2023-04-16 03:51:17,627:INFO:Uploading model into container now
2023-04-16 03:51:17,627:INFO:_master_model_container: 9
2023-04-16 03:51:17,627:INFO:_display_container: 2
2023-04-16 03:51:17,627:INFO:PassiveAggressiveRegressor(random_state=3383)
2023-04-16 03:51:17,627:INFO:create_model() successfully completed......................................
2023-04-16 03:51:17,724:INFO:SubProcess create_model() end ==================================
2023-04-16 03:51:17,724:INFO:Creating metrics dataframe
2023-04-16 03:51:17,727:INFO:Initializing Huber Regressor
2023-04-16 03:51:17,727:INFO:Total runtime is 0.1058114488919576 minutes
2023-04-16 03:51:17,727:INFO:SubProcess create_model() called ==================================
2023-04-16 03:51:17,727:INFO:Initializing create_model()
2023-04-16 03:51:17,727:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28be10ca0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28925e0a0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:51:17,727:INFO:Checking exceptions
2023-04-16 03:51:17,727:INFO:Importing libraries
2023-04-16 03:51:17,728:INFO:Copying training dataset
2023-04-16 03:51:17,730:INFO:Defining folds
2023-04-16 03:51:17,730:INFO:Declaring metric variables
2023-04-16 03:51:17,730:INFO:Importing untrained model
2023-04-16 03:51:17,730:INFO:Huber Regressor Imported successfully
2023-04-16 03:51:17,730:INFO:Starting cross validation
2023-04-16 03:51:17,731:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:51:17,921:INFO:Calculating mean and std
2023-04-16 03:51:17,922:INFO:Creating metrics dataframe
2023-04-16 03:51:17,928:INFO:Uploading results into container
2023-04-16 03:51:17,929:INFO:Uploading model into container now
2023-04-16 03:51:17,929:INFO:_master_model_container: 10
2023-04-16 03:51:17,929:INFO:_display_container: 2
2023-04-16 03:51:17,929:INFO:HuberRegressor()
2023-04-16 03:51:17,929:INFO:create_model() successfully completed......................................
2023-04-16 03:51:18,011:INFO:SubProcess create_model() end ==================================
2023-04-16 03:51:18,011:INFO:Creating metrics dataframe
2023-04-16 03:51:18,013:INFO:Initializing K Neighbors Regressor
2023-04-16 03:51:18,013:INFO:Total runtime is 0.11056988239288329 minutes
2023-04-16 03:51:18,013:INFO:SubProcess create_model() called ==================================
2023-04-16 03:51:18,013:INFO:Initializing create_model()
2023-04-16 03:51:18,013:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28be10ca0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28925e0a0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:51:18,013:INFO:Checking exceptions
2023-04-16 03:51:18,013:INFO:Importing libraries
2023-04-16 03:51:18,013:INFO:Copying training dataset
2023-04-16 03:51:18,014:INFO:Defining folds
2023-04-16 03:51:18,014:INFO:Declaring metric variables
2023-04-16 03:51:18,014:INFO:Importing untrained model
2023-04-16 03:51:18,014:INFO:K Neighbors Regressor Imported successfully
2023-04-16 03:51:18,014:INFO:Starting cross validation
2023-04-16 03:51:18,015:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:51:18,240:INFO:Calculating mean and std
2023-04-16 03:51:18,241:INFO:Creating metrics dataframe
2023-04-16 03:51:18,248:INFO:Uploading results into container
2023-04-16 03:51:18,249:INFO:Uploading model into container now
2023-04-16 03:51:18,249:INFO:_master_model_container: 11
2023-04-16 03:51:18,249:INFO:_display_container: 2
2023-04-16 03:51:18,249:INFO:KNeighborsRegressor(n_jobs=-1)
2023-04-16 03:51:18,249:INFO:create_model() successfully completed......................................
2023-04-16 03:51:18,345:INFO:SubProcess create_model() end ==================================
2023-04-16 03:51:18,345:INFO:Creating metrics dataframe
2023-04-16 03:51:18,347:INFO:Initializing Decision Tree Regressor
2023-04-16 03:51:18,347:INFO:Total runtime is 0.1161433458328247 minutes
2023-04-16 03:51:18,347:INFO:SubProcess create_model() called ==================================
2023-04-16 03:51:18,347:INFO:Initializing create_model()
2023-04-16 03:51:18,347:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28be10ca0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28925e0a0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:51:18,347:INFO:Checking exceptions
2023-04-16 03:51:18,347:INFO:Importing libraries
2023-04-16 03:51:18,347:INFO:Copying training dataset
2023-04-16 03:51:18,349:INFO:Defining folds
2023-04-16 03:51:18,349:INFO:Declaring metric variables
2023-04-16 03:51:18,349:INFO:Importing untrained model
2023-04-16 03:51:18,349:INFO:Decision Tree Regressor Imported successfully
2023-04-16 03:51:18,349:INFO:Starting cross validation
2023-04-16 03:51:18,349:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:51:18,595:INFO:Calculating mean and std
2023-04-16 03:51:18,595:INFO:Creating metrics dataframe
2023-04-16 03:51:18,603:INFO:Uploading results into container
2023-04-16 03:51:18,604:INFO:Uploading model into container now
2023-04-16 03:51:18,604:INFO:_master_model_container: 12
2023-04-16 03:51:18,604:INFO:_display_container: 2
2023-04-16 03:51:18,604:INFO:DecisionTreeRegressor(random_state=3383)
2023-04-16 03:51:18,604:INFO:create_model() successfully completed......................................
2023-04-16 03:51:18,698:INFO:SubProcess create_model() end ==================================
2023-04-16 03:51:18,698:INFO:Creating metrics dataframe
2023-04-16 03:51:18,700:INFO:Initializing Random Forest Regressor
2023-04-16 03:51:18,700:INFO:Total runtime is 0.12203186750411986 minutes
2023-04-16 03:51:18,700:INFO:SubProcess create_model() called ==================================
2023-04-16 03:51:18,701:INFO:Initializing create_model()
2023-04-16 03:51:18,701:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28be10ca0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28925e0a0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:51:18,701:INFO:Checking exceptions
2023-04-16 03:51:18,701:INFO:Importing libraries
2023-04-16 03:51:18,701:INFO:Copying training dataset
2023-04-16 03:51:18,702:INFO:Defining folds
2023-04-16 03:51:18,702:INFO:Declaring metric variables
2023-04-16 03:51:18,702:INFO:Importing untrained model
2023-04-16 03:51:18,703:INFO:Random Forest Regressor Imported successfully
2023-04-16 03:51:18,703:INFO:Starting cross validation
2023-04-16 03:51:18,703:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:51:20,193:INFO:Calculating mean and std
2023-04-16 03:51:20,194:INFO:Creating metrics dataframe
2023-04-16 03:51:20,210:INFO:Uploading results into container
2023-04-16 03:51:20,211:INFO:Uploading model into container now
2023-04-16 03:51:20,212:INFO:_master_model_container: 13
2023-04-16 03:51:20,212:INFO:_display_container: 2
2023-04-16 03:51:20,212:INFO:RandomForestRegressor(n_jobs=-1, random_state=3383)
2023-04-16 03:51:20,212:INFO:create_model() successfully completed......................................
2023-04-16 03:51:20,392:INFO:SubProcess create_model() end ==================================
2023-04-16 03:51:20,392:INFO:Creating metrics dataframe
2023-04-16 03:51:20,395:INFO:Initializing Extra Trees Regressor
2023-04-16 03:51:20,395:INFO:Total runtime is 0.15026955207188922 minutes
2023-04-16 03:51:20,395:INFO:SubProcess create_model() called ==================================
2023-04-16 03:51:20,395:INFO:Initializing create_model()
2023-04-16 03:51:20,395:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28be10ca0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28925e0a0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:51:20,395:INFO:Checking exceptions
2023-04-16 03:51:20,395:INFO:Importing libraries
2023-04-16 03:51:20,395:INFO:Copying training dataset
2023-04-16 03:51:20,397:INFO:Defining folds
2023-04-16 03:51:20,397:INFO:Declaring metric variables
2023-04-16 03:51:20,397:INFO:Importing untrained model
2023-04-16 03:51:20,397:INFO:Extra Trees Regressor Imported successfully
2023-04-16 03:51:20,397:INFO:Starting cross validation
2023-04-16 03:51:20,398:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:51:21,088:INFO:Calculating mean and std
2023-04-16 03:51:21,089:INFO:Creating metrics dataframe
2023-04-16 03:51:21,098:INFO:Uploading results into container
2023-04-16 03:51:21,098:INFO:Uploading model into container now
2023-04-16 03:51:21,098:INFO:_master_model_container: 14
2023-04-16 03:51:21,099:INFO:_display_container: 2
2023-04-16 03:51:21,099:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3383)
2023-04-16 03:51:21,099:INFO:create_model() successfully completed......................................
2023-04-16 03:51:21,176:INFO:SubProcess create_model() end ==================================
2023-04-16 03:51:21,176:INFO:Creating metrics dataframe
2023-04-16 03:51:21,178:INFO:Initializing AdaBoost Regressor
2023-04-16 03:51:21,178:INFO:Total runtime is 0.1633298317591349 minutes
2023-04-16 03:51:21,178:INFO:SubProcess create_model() called ==================================
2023-04-16 03:51:21,178:INFO:Initializing create_model()
2023-04-16 03:51:21,178:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28be10ca0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28925e0a0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:51:21,178:INFO:Checking exceptions
2023-04-16 03:51:21,178:INFO:Importing libraries
2023-04-16 03:51:21,179:INFO:Copying training dataset
2023-04-16 03:51:21,180:INFO:Defining folds
2023-04-16 03:51:21,180:INFO:Declaring metric variables
2023-04-16 03:51:21,180:INFO:Importing untrained model
2023-04-16 03:51:21,180:INFO:AdaBoost Regressor Imported successfully
2023-04-16 03:51:21,180:INFO:Starting cross validation
2023-04-16 03:51:21,181:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:51:21,526:INFO:Calculating mean and std
2023-04-16 03:51:21,526:INFO:Creating metrics dataframe
2023-04-16 03:51:21,536:INFO:Uploading results into container
2023-04-16 03:51:21,537:INFO:Uploading model into container now
2023-04-16 03:51:21,537:INFO:_master_model_container: 15
2023-04-16 03:51:21,537:INFO:_display_container: 2
2023-04-16 03:51:21,537:INFO:AdaBoostRegressor(random_state=3383)
2023-04-16 03:51:21,537:INFO:create_model() successfully completed......................................
2023-04-16 03:51:21,614:INFO:SubProcess create_model() end ==================================
2023-04-16 03:51:21,614:INFO:Creating metrics dataframe
2023-04-16 03:51:21,616:INFO:Initializing Gradient Boosting Regressor
2023-04-16 03:51:21,616:INFO:Total runtime is 0.17062073151270546 minutes
2023-04-16 03:51:21,616:INFO:SubProcess create_model() called ==================================
2023-04-16 03:51:21,616:INFO:Initializing create_model()
2023-04-16 03:51:21,616:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28be10ca0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28925e0a0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:51:21,616:INFO:Checking exceptions
2023-04-16 03:51:21,616:INFO:Importing libraries
2023-04-16 03:51:21,616:INFO:Copying training dataset
2023-04-16 03:51:21,617:INFO:Defining folds
2023-04-16 03:51:21,617:INFO:Declaring metric variables
2023-04-16 03:51:21,617:INFO:Importing untrained model
2023-04-16 03:51:21,617:INFO:Gradient Boosting Regressor Imported successfully
2023-04-16 03:51:21,617:INFO:Starting cross validation
2023-04-16 03:51:21,618:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:51:22,139:INFO:Calculating mean and std
2023-04-16 03:51:22,139:INFO:Creating metrics dataframe
2023-04-16 03:51:22,149:INFO:Uploading results into container
2023-04-16 03:51:22,149:INFO:Uploading model into container now
2023-04-16 03:51:22,150:INFO:_master_model_container: 16
2023-04-16 03:51:22,150:INFO:_display_container: 2
2023-04-16 03:51:22,150:INFO:GradientBoostingRegressor(random_state=3383)
2023-04-16 03:51:22,150:INFO:create_model() successfully completed......................................
2023-04-16 03:51:22,229:INFO:SubProcess create_model() end ==================================
2023-04-16 03:51:22,229:INFO:Creating metrics dataframe
2023-04-16 03:51:22,231:INFO:Initializing Light Gradient Boosting Machine
2023-04-16 03:51:22,231:INFO:Total runtime is 0.18088163534800208 minutes
2023-04-16 03:51:22,231:INFO:SubProcess create_model() called ==================================
2023-04-16 03:51:22,232:INFO:Initializing create_model()
2023-04-16 03:51:22,232:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28be10ca0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28925e0a0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:51:22,232:INFO:Checking exceptions
2023-04-16 03:51:22,232:INFO:Importing libraries
2023-04-16 03:51:22,232:INFO:Copying training dataset
2023-04-16 03:51:22,233:INFO:Defining folds
2023-04-16 03:51:22,233:INFO:Declaring metric variables
2023-04-16 03:51:22,233:INFO:Importing untrained model
2023-04-16 03:51:22,233:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-16 03:51:22,234:INFO:Starting cross validation
2023-04-16 03:51:22,234:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:51:22,649:INFO:Calculating mean and std
2023-04-16 03:51:22,649:INFO:Creating metrics dataframe
2023-04-16 03:51:22,688:INFO:Uploading results into container
2023-04-16 03:51:22,689:INFO:Uploading model into container now
2023-04-16 03:51:22,690:INFO:_master_model_container: 17
2023-04-16 03:51:22,690:INFO:_display_container: 2
2023-04-16 03:51:22,691:INFO:LGBMRegressor(random_state=3383)
2023-04-16 03:51:22,691:INFO:create_model() successfully completed......................................
2023-04-16 03:51:22,815:INFO:SubProcess create_model() end ==================================
2023-04-16 03:51:22,815:INFO:Creating metrics dataframe
2023-04-16 03:51:22,817:INFO:Initializing Dummy Regressor
2023-04-16 03:51:22,817:INFO:Total runtime is 0.19063973029454545 minutes
2023-04-16 03:51:22,817:INFO:SubProcess create_model() called ==================================
2023-04-16 03:51:22,817:INFO:Initializing create_model()
2023-04-16 03:51:22,817:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28be10ca0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28925e0a0>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:51:22,817:INFO:Checking exceptions
2023-04-16 03:51:22,817:INFO:Importing libraries
2023-04-16 03:51:22,817:INFO:Copying training dataset
2023-04-16 03:51:22,819:INFO:Defining folds
2023-04-16 03:51:22,819:INFO:Declaring metric variables
2023-04-16 03:51:22,819:INFO:Importing untrained model
2023-04-16 03:51:22,819:INFO:Dummy Regressor Imported successfully
2023-04-16 03:51:22,819:INFO:Starting cross validation
2023-04-16 03:51:22,819:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:51:23,038:INFO:Calculating mean and std
2023-04-16 03:51:23,039:INFO:Creating metrics dataframe
2023-04-16 03:51:23,051:INFO:Uploading results into container
2023-04-16 03:51:23,051:INFO:Uploading model into container now
2023-04-16 03:51:23,051:INFO:_master_model_container: 18
2023-04-16 03:51:23,051:INFO:_display_container: 2
2023-04-16 03:51:23,051:INFO:DummyRegressor()
2023-04-16 03:51:23,051:INFO:create_model() successfully completed......................................
2023-04-16 03:51:23,135:INFO:SubProcess create_model() end ==================================
2023-04-16 03:51:23,135:INFO:Creating metrics dataframe
2023-04-16 03:51:23,138:INFO:Initializing create_model()
2023-04-16 03:51:23,138:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28be10ca0>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:51:23,138:INFO:Checking exceptions
2023-04-16 03:51:23,138:INFO:Importing libraries
2023-04-16 03:51:23,138:INFO:Copying training dataset
2023-04-16 03:51:23,140:INFO:Defining folds
2023-04-16 03:51:23,140:INFO:Declaring metric variables
2023-04-16 03:51:23,140:INFO:Importing untrained model
2023-04-16 03:51:23,140:INFO:Declaring custom model
2023-04-16 03:51:23,140:INFO:Linear Regression Imported successfully
2023-04-16 03:51:23,140:INFO:Cross validation set to False
2023-04-16 03:51:23,140:INFO:Fitting Model
2023-04-16 03:51:23,178:INFO:LinearRegression(n_jobs=-1)
2023-04-16 03:51:23,178:INFO:create_model() successfully completed......................................
2023-04-16 03:51:23,266:INFO:_master_model_container: 18
2023-04-16 03:51:23,266:INFO:_display_container: 2
2023-04-16 03:51:23,267:INFO:LinearRegression(n_jobs=-1)
2023-04-16 03:51:23,267:INFO:compare_models() successfully completed......................................
2023-04-16 03:51:23,300:INFO:Initializing save_model()
2023-04-16 03:51:23,300:INFO:save_model(model=LinearRegression(n_jobs=-1), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/6h/lc7qdbvj2pj7j5w_bscg4wb40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Local time'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Local time'],
                                    transformer=LeaveOneOutEncoder(cols=['Local '
                                                                         'time'],
                                                                   handle_missing='return_nan',
                                                                   random_state=3383))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2023-04-16 03:51:23,300:INFO:Adding model into prep_pipe
2023-04-16 03:51:23,305:INFO:best_model.pkl saved in current working directory
2023-04-16 03:51:23,309:INFO:Pipeline(memory=FastMemory(location=/var/folders/6h/lc7qdbvj2pj7j5w_bscg4wb40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Local time'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Local time'],
                                    transformer=LeaveOneOutEncoder(cols=['Local '
                                                                         'time'],
                                                                   handle_missing='return_nan',
                                                                   random_state=3383))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LinearRegression(n_jobs=-1))])
2023-04-16 03:51:23,309:INFO:save_model() successfully completed......................................
2023-04-16 03:56:57,014:INFO:PyCaret RegressionExperiment
2023-04-16 03:56:57,014:INFO:Logging name: reg-default-name
2023-04-16 03:56:57,014:INFO:ML Usecase: MLUsecase.REGRESSION
2023-04-16 03:56:57,014:INFO:version 3.0.0
2023-04-16 03:56:57,014:INFO:Initializing setup()
2023-04-16 03:56:57,014:INFO:self.USI: 763f
2023-04-16 03:56:57,015:INFO:self._variable_keys: {'n_jobs_param', 'seed', '_ml_usecase', 'idx', 'gpu_n_jobs_param', 'y', 'y_train', 'fold_groups_param', 'X', 'fold_generator', 'exp_id', 'X_train', 'html_param', 'memory', 'pipeline', '_available_plots', 'transform_target_param', 'exp_name_log', 'fold_shuffle_param', 'data', 'USI', 'X_test', 'gpu_param', 'y_test', 'logging_param', 'log_plots_param', 'target_param'}
2023-04-16 03:56:57,015:INFO:Checking environment
2023-04-16 03:56:57,015:INFO:python_version: 3.9.13
2023-04-16 03:56:57,015:INFO:python_build: ('main', 'Aug 28 2022 18:56:22')
2023-04-16 03:56:57,015:INFO:machine: arm64
2023-04-16 03:56:57,015:INFO:platform: macOS-13.0.1-arm64-arm-64bit
2023-04-16 03:56:57,015:INFO:Memory: svmem(total=8589934592, available=2217377792, percent=74.2, used=3682140160, free=447430656, active=1780662272, inactive=1705852928, wired=1901477888)
2023-04-16 03:56:57,016:INFO:Physical Core: 8
2023-04-16 03:56:57,016:INFO:Logical Core: 8
2023-04-16 03:56:57,016:INFO:Checking libraries
2023-04-16 03:56:57,016:INFO:System:
2023-04-16 03:56:57,016:INFO:    python: 3.9.13 (main, Aug 28 2022, 18:56:22)  [Clang 13.1.6 (clang-1316.0.21.2.5)]
2023-04-16 03:56:57,016:INFO:executable: /opt/homebrew/opt/python@3.9/bin/python3.9
2023-04-16 03:56:57,016:INFO:   machine: macOS-13.0.1-arm64-arm-64bit
2023-04-16 03:56:57,016:INFO:PyCaret required dependencies:
2023-04-16 03:56:57,016:INFO:                 pip: 23.1
2023-04-16 03:56:57,016:INFO:          setuptools: 63.4.3
2023-04-16 03:56:57,016:INFO:             pycaret: 3.0.0
2023-04-16 03:56:57,016:INFO:             IPython: 8.4.0
2023-04-16 03:56:57,016:INFO:          ipywidgets: 8.0.6
2023-04-16 03:56:57,016:INFO:                tqdm: 4.64.1
2023-04-16 03:56:57,016:INFO:               numpy: 1.22.4
2023-04-16 03:56:57,016:INFO:              pandas: 1.5.3
2023-04-16 03:56:57,016:INFO:              jinja2: 3.1.2
2023-04-16 03:56:57,016:INFO:               scipy: 1.9.3
2023-04-16 03:56:57,016:INFO:              joblib: 1.2.0
2023-04-16 03:56:57,016:INFO:             sklearn: 1.2.2
2023-04-16 03:56:57,016:INFO:                pyod: 1.0.9
2023-04-16 03:56:57,016:INFO:            imblearn: 0.10.1
2023-04-16 03:56:57,016:INFO:   category_encoders: 2.6.0
2023-04-16 03:56:57,016:INFO:            lightgbm: 3.3.5
2023-04-16 03:56:57,016:INFO:               numba: 0.56.4
2023-04-16 03:56:57,016:INFO:            requests: 2.27.1
2023-04-16 03:56:57,016:INFO:          matplotlib: 3.6.3
2023-04-16 03:56:57,016:INFO:          scikitplot: 0.3.7
2023-04-16 03:56:57,016:INFO:         yellowbrick: 1.5
2023-04-16 03:56:57,016:INFO:              plotly: 5.14.1
2023-04-16 03:56:57,016:INFO:             kaleido: 0.2.1
2023-04-16 03:56:57,016:INFO:         statsmodels: 0.13.5
2023-04-16 03:56:57,016:INFO:              sktime: 0.17.1
2023-04-16 03:56:57,016:INFO:               tbats: 1.1.2
2023-04-16 03:56:57,016:INFO:            pmdarima: 2.0.3
2023-04-16 03:56:57,016:INFO:              psutil: 5.9.1
2023-04-16 03:56:57,016:INFO:PyCaret optional dependencies:
2023-04-16 03:56:57,016:INFO:                shap: Not installed
2023-04-16 03:56:57,016:INFO:           interpret: Not installed
2023-04-16 03:56:57,016:INFO:                umap: Not installed
2023-04-16 03:56:57,016:INFO:    pandas_profiling: 4.1.2
2023-04-16 03:56:57,016:INFO:  explainerdashboard: Not installed
2023-04-16 03:56:57,016:INFO:             autoviz: Not installed
2023-04-16 03:56:57,016:INFO:           fairlearn: Not installed
2023-04-16 03:56:57,016:INFO:             xgboost: Not installed
2023-04-16 03:56:57,016:INFO:            catboost: Not installed
2023-04-16 03:56:57,016:INFO:              kmodes: Not installed
2023-04-16 03:56:57,017:INFO:             mlxtend: Not installed
2023-04-16 03:56:57,017:INFO:       statsforecast: Not installed
2023-04-16 03:56:57,017:INFO:        tune_sklearn: Not installed
2023-04-16 03:56:57,017:INFO:                 ray: Not installed
2023-04-16 03:56:57,017:INFO:            hyperopt: Not installed
2023-04-16 03:56:57,017:INFO:              optuna: Not installed
2023-04-16 03:56:57,017:INFO:               skopt: Not installed
2023-04-16 03:56:57,017:INFO:              mlflow: Not installed
2023-04-16 03:56:57,017:INFO:              gradio: Not installed
2023-04-16 03:56:57,017:INFO:             fastapi: Not installed
2023-04-16 03:56:57,017:INFO:             uvicorn: Not installed
2023-04-16 03:56:57,017:INFO:              m2cgen: Not installed
2023-04-16 03:56:57,017:INFO:           evidently: Not installed
2023-04-16 03:56:57,017:INFO:               fugue: Not installed
2023-04-16 03:56:57,017:INFO:           streamlit: 1.21.0
2023-04-16 03:56:57,017:INFO:             prophet: Not installed
2023-04-16 03:56:57,017:INFO:None
2023-04-16 03:56:57,017:INFO:Set up data.
2023-04-16 03:56:57,021:INFO:Set up train/test split.
2023-04-16 03:56:57,027:INFO:Set up index.
2023-04-16 03:56:57,027:INFO:Set up folding strategy.
2023-04-16 03:56:57,027:INFO:Assigning column types.
2023-04-16 03:56:57,029:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-16 03:56:57,029:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-04-16 03:56:57,032:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-04-16 03:56:57,035:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-04-16 03:56:57,063:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-04-16 03:56:57,081:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-16 03:56:57,082:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:56:57,082:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:56:57,082:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-04-16 03:56:57,084:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-04-16 03:56:57,086:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-04-16 03:56:57,110:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-04-16 03:56:57,129:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-16 03:56:57,129:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:56:57,129:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:56:57,129:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-04-16 03:56:57,131:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-04-16 03:56:57,133:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-04-16 03:56:57,157:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-04-16 03:56:57,176:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-16 03:56:57,176:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:56:57,176:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:56:57,178:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-04-16 03:56:57,180:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-04-16 03:56:57,204:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-04-16 03:56:57,222:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-16 03:56:57,223:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:56:57,223:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:56:57,223:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-04-16 03:56:57,227:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-04-16 03:56:57,250:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-04-16 03:56:57,268:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-16 03:56:57,269:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:56:57,269:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:56:57,273:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-04-16 03:56:57,296:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-04-16 03:56:57,315:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-16 03:56:57,315:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:56:57,315:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:56:57,315:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-04-16 03:56:57,342:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-04-16 03:56:57,361:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-16 03:56:57,361:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:56:57,361:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:56:57,389:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-04-16 03:56:57,407:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-16 03:56:57,407:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:56:57,407:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:56:57,407:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-16 03:56:57,435:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-04-16 03:56:57,453:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:56:57,453:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:56:57,481:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-04-16 03:56:57,500:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:56:57,500:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:56:57,500:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-04-16 03:56:57,546:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:56:57,546:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:56:57,593:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:56:57,593:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:56:57,593:INFO:Preparing preprocessing pipeline...
2023-04-16 03:56:57,593:INFO:Set up simple imputation.
2023-04-16 03:56:57,596:INFO:Set up encoding of categorical features.
2023-04-16 03:56:57,596:INFO:Set up column name cleaning.
2023-04-16 03:56:57,621:INFO:Finished creating preprocessing pipeline.
2023-04-16 03:56:57,624:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/6h/lc7qdbvj2pj7j5w_bscg4wb40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Local time'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Local time'],
                                    transformer=LeaveOneOutEncoder(cols=['Local '
                                                                         'time'],
                                                                   handle_missing='return_nan',
                                                                   random_state=5298))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-04-16 03:56:57,624:INFO:Creating final display dataframe.
2023-04-16 03:56:57,692:INFO:Setup _display_container:                     Description             Value
0                    Session id              5298
1                        Target             Close
2                   Target type        Regression
3           Original data shape         (1840, 6)
4        Transformed data shape         (1840, 6)
5   Transformed train set shape         (1288, 6)
6    Transformed test set shape          (552, 6)
7              Numeric features                 4
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              763f
2023-04-16 03:56:57,744:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:56:57,744:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:56:57,790:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:56:57,790:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-16 03:56:57,790:INFO:setup() successfully completed in 0.79s...............
2023-04-16 03:56:57,806:INFO:Initializing compare_models()
2023-04-16 03:56:57,806:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x289d54ca0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x289d54ca0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-04-16 03:56:57,806:INFO:Checking exceptions
2023-04-16 03:56:57,807:INFO:Preparing display monitor
2023-04-16 03:56:57,809:INFO:Initializing Linear Regression
2023-04-16 03:56:57,809:INFO:Total runtime is 1.0967254638671874e-06 minutes
2023-04-16 03:56:57,809:INFO:SubProcess create_model() called ==================================
2023-04-16 03:56:57,809:INFO:Initializing create_model()
2023-04-16 03:56:57,809:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289d54ca0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2898a6370>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:56:57,809:INFO:Checking exceptions
2023-04-16 03:56:57,809:INFO:Importing libraries
2023-04-16 03:56:57,809:INFO:Copying training dataset
2023-04-16 03:56:57,811:INFO:Defining folds
2023-04-16 03:56:57,811:INFO:Declaring metric variables
2023-04-16 03:56:57,811:INFO:Importing untrained model
2023-04-16 03:56:57,811:INFO:Linear Regression Imported successfully
2023-04-16 03:56:57,811:INFO:Starting cross validation
2023-04-16 03:56:57,811:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:57:01,595:INFO:Calculating mean and std
2023-04-16 03:57:01,596:INFO:Creating metrics dataframe
2023-04-16 03:57:01,616:INFO:Uploading results into container
2023-04-16 03:57:01,617:INFO:Uploading model into container now
2023-04-16 03:57:01,618:INFO:_master_model_container: 1
2023-04-16 03:57:01,618:INFO:_display_container: 2
2023-04-16 03:57:01,620:INFO:LinearRegression(n_jobs=-1)
2023-04-16 03:57:01,620:INFO:create_model() successfully completed......................................
2023-04-16 03:57:01,802:INFO:SubProcess create_model() end ==================================
2023-04-16 03:57:01,802:INFO:Creating metrics dataframe
2023-04-16 03:57:01,804:INFO:Initializing Lasso Regression
2023-04-16 03:57:01,804:INFO:Total runtime is 0.0665846824645996 minutes
2023-04-16 03:57:01,804:INFO:SubProcess create_model() called ==================================
2023-04-16 03:57:01,804:INFO:Initializing create_model()
2023-04-16 03:57:01,804:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289d54ca0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2898a6370>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:57:01,804:INFO:Checking exceptions
2023-04-16 03:57:01,804:INFO:Importing libraries
2023-04-16 03:57:01,804:INFO:Copying training dataset
2023-04-16 03:57:01,806:INFO:Defining folds
2023-04-16 03:57:01,806:INFO:Declaring metric variables
2023-04-16 03:57:01,806:INFO:Importing untrained model
2023-04-16 03:57:01,807:INFO:Lasso Regression Imported successfully
2023-04-16 03:57:01,807:INFO:Starting cross validation
2023-04-16 03:57:01,807:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:57:01,873:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.151e+08, tolerance: 3.270e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:57:01,880:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.107e+08, tolerance: 3.333e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:57:01,881:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.187e+08, tolerance: 3.314e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:57:01,892:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.099e+08, tolerance: 3.223e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:57:01,927:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.212e+08, tolerance: 3.367e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:57:01,927:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.188e+08, tolerance: 3.344e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:57:01,943:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.194e+08, tolerance: 3.284e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:57:01,965:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.160e+08, tolerance: 3.232e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:57:01,965:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.189e+08, tolerance: 3.314e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:57:01,969:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.192e+08, tolerance: 3.341e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:57:02,006:INFO:Calculating mean and std
2023-04-16 03:57:02,007:INFO:Creating metrics dataframe
2023-04-16 03:57:02,019:INFO:Uploading results into container
2023-04-16 03:57:02,019:INFO:Uploading model into container now
2023-04-16 03:57:02,019:INFO:_master_model_container: 2
2023-04-16 03:57:02,019:INFO:_display_container: 2
2023-04-16 03:57:02,020:INFO:Lasso(random_state=5298)
2023-04-16 03:57:02,020:INFO:create_model() successfully completed......................................
2023-04-16 03:57:02,106:INFO:SubProcess create_model() end ==================================
2023-04-16 03:57:02,106:INFO:Creating metrics dataframe
2023-04-16 03:57:02,108:INFO:Initializing Ridge Regression
2023-04-16 03:57:02,108:INFO:Total runtime is 0.07165173292160033 minutes
2023-04-16 03:57:02,108:INFO:SubProcess create_model() called ==================================
2023-04-16 03:57:02,108:INFO:Initializing create_model()
2023-04-16 03:57:02,108:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289d54ca0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2898a6370>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:57:02,108:INFO:Checking exceptions
2023-04-16 03:57:02,108:INFO:Importing libraries
2023-04-16 03:57:02,108:INFO:Copying training dataset
2023-04-16 03:57:02,110:INFO:Defining folds
2023-04-16 03:57:02,110:INFO:Declaring metric variables
2023-04-16 03:57:02,110:INFO:Importing untrained model
2023-04-16 03:57:02,110:INFO:Ridge Regression Imported successfully
2023-04-16 03:57:02,110:INFO:Starting cross validation
2023-04-16 03:57:02,111:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:57:02,478:INFO:Calculating mean and std
2023-04-16 03:57:02,478:INFO:Creating metrics dataframe
2023-04-16 03:57:02,493:INFO:Uploading results into container
2023-04-16 03:57:02,493:INFO:Uploading model into container now
2023-04-16 03:57:02,494:INFO:_master_model_container: 3
2023-04-16 03:57:02,494:INFO:_display_container: 2
2023-04-16 03:57:02,494:INFO:Ridge(random_state=5298)
2023-04-16 03:57:02,494:INFO:create_model() successfully completed......................................
2023-04-16 03:57:02,583:INFO:SubProcess create_model() end ==================================
2023-04-16 03:57:02,583:INFO:Creating metrics dataframe
2023-04-16 03:57:02,586:INFO:Initializing Elastic Net
2023-04-16 03:57:02,586:INFO:Total runtime is 0.07961816390355428 minutes
2023-04-16 03:57:02,586:INFO:SubProcess create_model() called ==================================
2023-04-16 03:57:02,586:INFO:Initializing create_model()
2023-04-16 03:57:02,586:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289d54ca0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2898a6370>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:57:02,586:INFO:Checking exceptions
2023-04-16 03:57:02,586:INFO:Importing libraries
2023-04-16 03:57:02,587:INFO:Copying training dataset
2023-04-16 03:57:02,588:INFO:Defining folds
2023-04-16 03:57:02,589:INFO:Declaring metric variables
2023-04-16 03:57:02,589:INFO:Importing untrained model
2023-04-16 03:57:02,589:INFO:Elastic Net Imported successfully
2023-04-16 03:57:02,589:INFO:Starting cross validation
2023-04-16 03:57:02,590:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:57:02,651:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.151e+08, tolerance: 3.270e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:57:02,659:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.107e+08, tolerance: 3.333e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:57:02,666:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.187e+08, tolerance: 3.314e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:57:02,680:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.188e+08, tolerance: 3.344e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:57:02,686:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.099e+08, tolerance: 3.223e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:57:02,687:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.212e+08, tolerance: 3.367e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:57:02,710:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.194e+08, tolerance: 3.284e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:57:02,712:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.189e+08, tolerance: 3.314e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:57:02,747:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.160e+08, tolerance: 3.232e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:57:02,759:WARNING:/opt/homebrew/lib/python3.9/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.192e+08, tolerance: 3.341e+07
  model = cd_fast.enet_coordinate_descent(

2023-04-16 03:57:02,795:INFO:Calculating mean and std
2023-04-16 03:57:02,795:INFO:Creating metrics dataframe
2023-04-16 03:57:02,808:INFO:Uploading results into container
2023-04-16 03:57:02,808:INFO:Uploading model into container now
2023-04-16 03:57:02,809:INFO:_master_model_container: 4
2023-04-16 03:57:02,809:INFO:_display_container: 2
2023-04-16 03:57:02,809:INFO:ElasticNet(random_state=5298)
2023-04-16 03:57:02,809:INFO:create_model() successfully completed......................................
2023-04-16 03:57:02,902:INFO:SubProcess create_model() end ==================================
2023-04-16 03:57:02,902:INFO:Creating metrics dataframe
2023-04-16 03:57:02,904:INFO:Initializing Least Angle Regression
2023-04-16 03:57:02,904:INFO:Total runtime is 0.08492083152135213 minutes
2023-04-16 03:57:02,904:INFO:SubProcess create_model() called ==================================
2023-04-16 03:57:02,904:INFO:Initializing create_model()
2023-04-16 03:57:02,905:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289d54ca0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2898a6370>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:57:02,905:INFO:Checking exceptions
2023-04-16 03:57:02,905:INFO:Importing libraries
2023-04-16 03:57:02,905:INFO:Copying training dataset
2023-04-16 03:57:02,906:INFO:Defining folds
2023-04-16 03:57:02,906:INFO:Declaring metric variables
2023-04-16 03:57:02,906:INFO:Importing untrained model
2023-04-16 03:57:02,906:INFO:Least Angle Regression Imported successfully
2023-04-16 03:57:02,906:INFO:Starting cross validation
2023-04-16 03:57:02,907:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:57:03,090:INFO:Calculating mean and std
2023-04-16 03:57:03,090:INFO:Creating metrics dataframe
2023-04-16 03:57:03,104:INFO:Uploading results into container
2023-04-16 03:57:03,104:INFO:Uploading model into container now
2023-04-16 03:57:03,104:INFO:_master_model_container: 5
2023-04-16 03:57:03,104:INFO:_display_container: 2
2023-04-16 03:57:03,104:INFO:Lars(random_state=5298)
2023-04-16 03:57:03,104:INFO:create_model() successfully completed......................................
2023-04-16 03:57:03,186:INFO:SubProcess create_model() end ==================================
2023-04-16 03:57:03,186:INFO:Creating metrics dataframe
2023-04-16 03:57:03,188:INFO:Initializing Lasso Least Angle Regression
2023-04-16 03:57:03,188:INFO:Total runtime is 0.08965089718500772 minutes
2023-04-16 03:57:03,188:INFO:SubProcess create_model() called ==================================
2023-04-16 03:57:03,188:INFO:Initializing create_model()
2023-04-16 03:57:03,188:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289d54ca0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2898a6370>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:57:03,188:INFO:Checking exceptions
2023-04-16 03:57:03,188:INFO:Importing libraries
2023-04-16 03:57:03,188:INFO:Copying training dataset
2023-04-16 03:57:03,190:INFO:Defining folds
2023-04-16 03:57:03,190:INFO:Declaring metric variables
2023-04-16 03:57:03,190:INFO:Importing untrained model
2023-04-16 03:57:03,190:INFO:Lasso Least Angle Regression Imported successfully
2023-04-16 03:57:03,190:INFO:Starting cross validation
2023-04-16 03:57:03,190:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:57:03,376:INFO:Calculating mean and std
2023-04-16 03:57:03,376:INFO:Creating metrics dataframe
2023-04-16 03:57:03,389:INFO:Uploading results into container
2023-04-16 03:57:03,389:INFO:Uploading model into container now
2023-04-16 03:57:03,389:INFO:_master_model_container: 6
2023-04-16 03:57:03,389:INFO:_display_container: 2
2023-04-16 03:57:03,389:INFO:LassoLars(random_state=5298)
2023-04-16 03:57:03,390:INFO:create_model() successfully completed......................................
2023-04-16 03:57:03,471:INFO:SubProcess create_model() end ==================================
2023-04-16 03:57:03,471:INFO:Creating metrics dataframe
2023-04-16 03:57:03,473:INFO:Initializing Orthogonal Matching Pursuit
2023-04-16 03:57:03,473:INFO:Total runtime is 0.09440476497014363 minutes
2023-04-16 03:57:03,473:INFO:SubProcess create_model() called ==================================
2023-04-16 03:57:03,474:INFO:Initializing create_model()
2023-04-16 03:57:03,474:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289d54ca0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2898a6370>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:57:03,474:INFO:Checking exceptions
2023-04-16 03:57:03,474:INFO:Importing libraries
2023-04-16 03:57:03,474:INFO:Copying training dataset
2023-04-16 03:57:03,475:INFO:Defining folds
2023-04-16 03:57:03,475:INFO:Declaring metric variables
2023-04-16 03:57:03,475:INFO:Importing untrained model
2023-04-16 03:57:03,475:INFO:Orthogonal Matching Pursuit Imported successfully
2023-04-16 03:57:03,475:INFO:Starting cross validation
2023-04-16 03:57:03,475:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:57:03,658:INFO:Calculating mean and std
2023-04-16 03:57:03,658:INFO:Creating metrics dataframe
2023-04-16 03:57:03,671:INFO:Uploading results into container
2023-04-16 03:57:03,671:INFO:Uploading model into container now
2023-04-16 03:57:03,671:INFO:_master_model_container: 7
2023-04-16 03:57:03,671:INFO:_display_container: 2
2023-04-16 03:57:03,672:INFO:OrthogonalMatchingPursuit()
2023-04-16 03:57:03,672:INFO:create_model() successfully completed......................................
2023-04-16 03:57:03,753:INFO:SubProcess create_model() end ==================================
2023-04-16 03:57:03,753:INFO:Creating metrics dataframe
2023-04-16 03:57:03,755:INFO:Initializing Bayesian Ridge
2023-04-16 03:57:03,755:INFO:Total runtime is 0.09910186529159545 minutes
2023-04-16 03:57:03,755:INFO:SubProcess create_model() called ==================================
2023-04-16 03:57:03,755:INFO:Initializing create_model()
2023-04-16 03:57:03,755:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289d54ca0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2898a6370>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:57:03,755:INFO:Checking exceptions
2023-04-16 03:57:03,755:INFO:Importing libraries
2023-04-16 03:57:03,755:INFO:Copying training dataset
2023-04-16 03:57:03,757:INFO:Defining folds
2023-04-16 03:57:03,757:INFO:Declaring metric variables
2023-04-16 03:57:03,757:INFO:Importing untrained model
2023-04-16 03:57:03,757:INFO:Bayesian Ridge Imported successfully
2023-04-16 03:57:03,757:INFO:Starting cross validation
2023-04-16 03:57:03,758:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:57:03,957:INFO:Calculating mean and std
2023-04-16 03:57:03,957:INFO:Creating metrics dataframe
2023-04-16 03:57:03,969:INFO:Uploading results into container
2023-04-16 03:57:03,970:INFO:Uploading model into container now
2023-04-16 03:57:03,970:INFO:_master_model_container: 8
2023-04-16 03:57:03,970:INFO:_display_container: 2
2023-04-16 03:57:03,970:INFO:BayesianRidge()
2023-04-16 03:57:03,970:INFO:create_model() successfully completed......................................
2023-04-16 03:57:04,047:INFO:SubProcess create_model() end ==================================
2023-04-16 03:57:04,047:INFO:Creating metrics dataframe
2023-04-16 03:57:04,049:INFO:Initializing Passive Aggressive Regressor
2023-04-16 03:57:04,049:INFO:Total runtime is 0.10400629838307698 minutes
2023-04-16 03:57:04,050:INFO:SubProcess create_model() called ==================================
2023-04-16 03:57:04,050:INFO:Initializing create_model()
2023-04-16 03:57:04,050:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289d54ca0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2898a6370>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:57:04,050:INFO:Checking exceptions
2023-04-16 03:57:04,050:INFO:Importing libraries
2023-04-16 03:57:04,050:INFO:Copying training dataset
2023-04-16 03:57:04,051:INFO:Defining folds
2023-04-16 03:57:04,051:INFO:Declaring metric variables
2023-04-16 03:57:04,051:INFO:Importing untrained model
2023-04-16 03:57:04,051:INFO:Passive Aggressive Regressor Imported successfully
2023-04-16 03:57:04,051:INFO:Starting cross validation
2023-04-16 03:57:04,052:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:57:04,239:INFO:Calculating mean and std
2023-04-16 03:57:04,240:INFO:Creating metrics dataframe
2023-04-16 03:57:04,253:INFO:Uploading results into container
2023-04-16 03:57:04,253:INFO:Uploading model into container now
2023-04-16 03:57:04,253:INFO:_master_model_container: 9
2023-04-16 03:57:04,253:INFO:_display_container: 2
2023-04-16 03:57:04,254:INFO:PassiveAggressiveRegressor(random_state=5298)
2023-04-16 03:57:04,254:INFO:create_model() successfully completed......................................
2023-04-16 03:57:04,333:INFO:SubProcess create_model() end ==================================
2023-04-16 03:57:04,334:INFO:Creating metrics dataframe
2023-04-16 03:57:04,336:INFO:Initializing Huber Regressor
2023-04-16 03:57:04,336:INFO:Total runtime is 0.1087758183479309 minutes
2023-04-16 03:57:04,336:INFO:SubProcess create_model() called ==================================
2023-04-16 03:57:04,336:INFO:Initializing create_model()
2023-04-16 03:57:04,336:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289d54ca0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2898a6370>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:57:04,336:INFO:Checking exceptions
2023-04-16 03:57:04,336:INFO:Importing libraries
2023-04-16 03:57:04,336:INFO:Copying training dataset
2023-04-16 03:57:04,337:INFO:Defining folds
2023-04-16 03:57:04,337:INFO:Declaring metric variables
2023-04-16 03:57:04,337:INFO:Importing untrained model
2023-04-16 03:57:04,337:INFO:Huber Regressor Imported successfully
2023-04-16 03:57:04,337:INFO:Starting cross validation
2023-04-16 03:57:04,338:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:57:04,535:INFO:Calculating mean and std
2023-04-16 03:57:04,536:INFO:Creating metrics dataframe
2023-04-16 03:57:04,550:INFO:Uploading results into container
2023-04-16 03:57:04,550:INFO:Uploading model into container now
2023-04-16 03:57:04,550:INFO:_master_model_container: 10
2023-04-16 03:57:04,550:INFO:_display_container: 2
2023-04-16 03:57:04,551:INFO:HuberRegressor()
2023-04-16 03:57:04,551:INFO:create_model() successfully completed......................................
2023-04-16 03:57:04,628:INFO:SubProcess create_model() end ==================================
2023-04-16 03:57:04,628:INFO:Creating metrics dataframe
2023-04-16 03:57:04,630:INFO:Initializing K Neighbors Regressor
2023-04-16 03:57:04,630:INFO:Total runtime is 0.1136906345685323 minutes
2023-04-16 03:57:04,631:INFO:SubProcess create_model() called ==================================
2023-04-16 03:57:04,631:INFO:Initializing create_model()
2023-04-16 03:57:04,631:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289d54ca0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2898a6370>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:57:04,631:INFO:Checking exceptions
2023-04-16 03:57:04,631:INFO:Importing libraries
2023-04-16 03:57:04,631:INFO:Copying training dataset
2023-04-16 03:57:04,632:INFO:Defining folds
2023-04-16 03:57:04,632:INFO:Declaring metric variables
2023-04-16 03:57:04,632:INFO:Importing untrained model
2023-04-16 03:57:04,633:INFO:K Neighbors Regressor Imported successfully
2023-04-16 03:57:04,633:INFO:Starting cross validation
2023-04-16 03:57:04,633:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:57:04,824:INFO:Calculating mean and std
2023-04-16 03:57:04,824:INFO:Creating metrics dataframe
2023-04-16 03:57:04,838:INFO:Uploading results into container
2023-04-16 03:57:04,838:INFO:Uploading model into container now
2023-04-16 03:57:04,839:INFO:_master_model_container: 11
2023-04-16 03:57:04,839:INFO:_display_container: 2
2023-04-16 03:57:04,839:INFO:KNeighborsRegressor(n_jobs=-1)
2023-04-16 03:57:04,839:INFO:create_model() successfully completed......................................
2023-04-16 03:57:04,921:INFO:SubProcess create_model() end ==================================
2023-04-16 03:57:04,921:INFO:Creating metrics dataframe
2023-04-16 03:57:04,923:INFO:Initializing Decision Tree Regressor
2023-04-16 03:57:04,923:INFO:Total runtime is 0.11856158177057902 minutes
2023-04-16 03:57:04,923:INFO:SubProcess create_model() called ==================================
2023-04-16 03:57:04,923:INFO:Initializing create_model()
2023-04-16 03:57:04,923:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289d54ca0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2898a6370>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:57:04,923:INFO:Checking exceptions
2023-04-16 03:57:04,923:INFO:Importing libraries
2023-04-16 03:57:04,923:INFO:Copying training dataset
2023-04-16 03:57:04,925:INFO:Defining folds
2023-04-16 03:57:04,925:INFO:Declaring metric variables
2023-04-16 03:57:04,925:INFO:Importing untrained model
2023-04-16 03:57:04,925:INFO:Decision Tree Regressor Imported successfully
2023-04-16 03:57:04,925:INFO:Starting cross validation
2023-04-16 03:57:04,925:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:57:05,104:INFO:Calculating mean and std
2023-04-16 03:57:05,105:INFO:Creating metrics dataframe
2023-04-16 03:57:05,117:INFO:Uploading results into container
2023-04-16 03:57:05,118:INFO:Uploading model into container now
2023-04-16 03:57:05,118:INFO:_master_model_container: 12
2023-04-16 03:57:05,118:INFO:_display_container: 2
2023-04-16 03:57:05,118:INFO:DecisionTreeRegressor(random_state=5298)
2023-04-16 03:57:05,118:INFO:create_model() successfully completed......................................
2023-04-16 03:57:05,199:INFO:SubProcess create_model() end ==================================
2023-04-16 03:57:05,199:INFO:Creating metrics dataframe
2023-04-16 03:57:05,201:INFO:Initializing Random Forest Regressor
2023-04-16 03:57:05,201:INFO:Total runtime is 0.12319404681523641 minutes
2023-04-16 03:57:05,201:INFO:SubProcess create_model() called ==================================
2023-04-16 03:57:05,201:INFO:Initializing create_model()
2023-04-16 03:57:05,201:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289d54ca0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2898a6370>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:57:05,201:INFO:Checking exceptions
2023-04-16 03:57:05,201:INFO:Importing libraries
2023-04-16 03:57:05,201:INFO:Copying training dataset
2023-04-16 03:57:05,202:INFO:Defining folds
2023-04-16 03:57:05,202:INFO:Declaring metric variables
2023-04-16 03:57:05,202:INFO:Importing untrained model
2023-04-16 03:57:05,203:INFO:Random Forest Regressor Imported successfully
2023-04-16 03:57:05,203:INFO:Starting cross validation
2023-04-16 03:57:05,203:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:57:05,975:INFO:Calculating mean and std
2023-04-16 03:57:05,975:INFO:Creating metrics dataframe
2023-04-16 03:57:05,989:INFO:Uploading results into container
2023-04-16 03:57:05,989:INFO:Uploading model into container now
2023-04-16 03:57:05,990:INFO:_master_model_container: 13
2023-04-16 03:57:05,990:INFO:_display_container: 2
2023-04-16 03:57:05,990:INFO:RandomForestRegressor(n_jobs=-1, random_state=5298)
2023-04-16 03:57:05,990:INFO:create_model() successfully completed......................................
2023-04-16 03:57:06,066:INFO:SubProcess create_model() end ==================================
2023-04-16 03:57:06,066:INFO:Creating metrics dataframe
2023-04-16 03:57:06,068:INFO:Initializing Extra Trees Regressor
2023-04-16 03:57:06,068:INFO:Total runtime is 0.13765050172805787 minutes
2023-04-16 03:57:06,068:INFO:SubProcess create_model() called ==================================
2023-04-16 03:57:06,068:INFO:Initializing create_model()
2023-04-16 03:57:06,068:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289d54ca0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2898a6370>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:57:06,068:INFO:Checking exceptions
2023-04-16 03:57:06,068:INFO:Importing libraries
2023-04-16 03:57:06,068:INFO:Copying training dataset
2023-04-16 03:57:06,070:INFO:Defining folds
2023-04-16 03:57:06,070:INFO:Declaring metric variables
2023-04-16 03:57:06,070:INFO:Importing untrained model
2023-04-16 03:57:06,070:INFO:Extra Trees Regressor Imported successfully
2023-04-16 03:57:06,070:INFO:Starting cross validation
2023-04-16 03:57:06,071:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:57:06,689:INFO:Calculating mean and std
2023-04-16 03:57:06,689:INFO:Creating metrics dataframe
2023-04-16 03:57:06,704:INFO:Uploading results into container
2023-04-16 03:57:06,704:INFO:Uploading model into container now
2023-04-16 03:57:06,704:INFO:_master_model_container: 14
2023-04-16 03:57:06,704:INFO:_display_container: 2
2023-04-16 03:57:06,705:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=5298)
2023-04-16 03:57:06,705:INFO:create_model() successfully completed......................................
2023-04-16 03:57:06,784:INFO:SubProcess create_model() end ==================================
2023-04-16 03:57:06,784:INFO:Creating metrics dataframe
2023-04-16 03:57:06,786:INFO:Initializing AdaBoost Regressor
2023-04-16 03:57:06,786:INFO:Total runtime is 0.14962038199106853 minutes
2023-04-16 03:57:06,786:INFO:SubProcess create_model() called ==================================
2023-04-16 03:57:06,786:INFO:Initializing create_model()
2023-04-16 03:57:06,787:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289d54ca0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2898a6370>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:57:06,787:INFO:Checking exceptions
2023-04-16 03:57:06,787:INFO:Importing libraries
2023-04-16 03:57:06,787:INFO:Copying training dataset
2023-04-16 03:57:06,788:INFO:Defining folds
2023-04-16 03:57:06,788:INFO:Declaring metric variables
2023-04-16 03:57:06,788:INFO:Importing untrained model
2023-04-16 03:57:06,788:INFO:AdaBoost Regressor Imported successfully
2023-04-16 03:57:06,788:INFO:Starting cross validation
2023-04-16 03:57:06,789:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:57:07,189:INFO:Calculating mean and std
2023-04-16 03:57:07,190:INFO:Creating metrics dataframe
2023-04-16 03:57:07,206:INFO:Uploading results into container
2023-04-16 03:57:07,206:INFO:Uploading model into container now
2023-04-16 03:57:07,207:INFO:_master_model_container: 15
2023-04-16 03:57:07,207:INFO:_display_container: 2
2023-04-16 03:57:07,207:INFO:AdaBoostRegressor(random_state=5298)
2023-04-16 03:57:07,207:INFO:create_model() successfully completed......................................
2023-04-16 03:57:07,301:INFO:SubProcess create_model() end ==================================
2023-04-16 03:57:07,301:INFO:Creating metrics dataframe
2023-04-16 03:57:07,303:INFO:Initializing Gradient Boosting Regressor
2023-04-16 03:57:07,303:INFO:Total runtime is 0.1582334796587626 minutes
2023-04-16 03:57:07,303:INFO:SubProcess create_model() called ==================================
2023-04-16 03:57:07,303:INFO:Initializing create_model()
2023-04-16 03:57:07,303:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289d54ca0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2898a6370>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:57:07,303:INFO:Checking exceptions
2023-04-16 03:57:07,303:INFO:Importing libraries
2023-04-16 03:57:07,303:INFO:Copying training dataset
2023-04-16 03:57:07,305:INFO:Defining folds
2023-04-16 03:57:07,305:INFO:Declaring metric variables
2023-04-16 03:57:07,305:INFO:Importing untrained model
2023-04-16 03:57:07,305:INFO:Gradient Boosting Regressor Imported successfully
2023-04-16 03:57:07,305:INFO:Starting cross validation
2023-04-16 03:57:07,306:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:57:07,882:INFO:Calculating mean and std
2023-04-16 03:57:07,882:INFO:Creating metrics dataframe
2023-04-16 03:57:07,900:INFO:Uploading results into container
2023-04-16 03:57:07,900:INFO:Uploading model into container now
2023-04-16 03:57:07,900:INFO:_master_model_container: 16
2023-04-16 03:57:07,900:INFO:_display_container: 2
2023-04-16 03:57:07,900:INFO:GradientBoostingRegressor(random_state=5298)
2023-04-16 03:57:07,900:INFO:create_model() successfully completed......................................
2023-04-16 03:57:07,977:INFO:SubProcess create_model() end ==================================
2023-04-16 03:57:07,977:INFO:Creating metrics dataframe
2023-04-16 03:57:07,979:INFO:Initializing Light Gradient Boosting Machine
2023-04-16 03:57:07,979:INFO:Total runtime is 0.169503116607666 minutes
2023-04-16 03:57:07,979:INFO:SubProcess create_model() called ==================================
2023-04-16 03:57:07,979:INFO:Initializing create_model()
2023-04-16 03:57:07,979:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289d54ca0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2898a6370>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:57:07,980:INFO:Checking exceptions
2023-04-16 03:57:07,980:INFO:Importing libraries
2023-04-16 03:57:07,980:INFO:Copying training dataset
2023-04-16 03:57:07,981:INFO:Defining folds
2023-04-16 03:57:07,981:INFO:Declaring metric variables
2023-04-16 03:57:07,981:INFO:Importing untrained model
2023-04-16 03:57:07,981:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-16 03:57:07,982:INFO:Starting cross validation
2023-04-16 03:57:07,982:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:57:08,364:INFO:Calculating mean and std
2023-04-16 03:57:08,365:INFO:Creating metrics dataframe
2023-04-16 03:57:08,383:INFO:Uploading results into container
2023-04-16 03:57:08,384:INFO:Uploading model into container now
2023-04-16 03:57:08,384:INFO:_master_model_container: 17
2023-04-16 03:57:08,384:INFO:_display_container: 2
2023-04-16 03:57:08,384:INFO:LGBMRegressor(random_state=5298)
2023-04-16 03:57:08,384:INFO:create_model() successfully completed......................................
2023-04-16 03:57:08,460:INFO:SubProcess create_model() end ==================================
2023-04-16 03:57:08,461:INFO:Creating metrics dataframe
2023-04-16 03:57:08,463:INFO:Initializing Dummy Regressor
2023-04-16 03:57:08,463:INFO:Total runtime is 0.1775606830914815 minutes
2023-04-16 03:57:08,463:INFO:SubProcess create_model() called ==================================
2023-04-16 03:57:08,463:INFO:Initializing create_model()
2023-04-16 03:57:08,463:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289d54ca0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2898a6370>, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:57:08,463:INFO:Checking exceptions
2023-04-16 03:57:08,463:INFO:Importing libraries
2023-04-16 03:57:08,463:INFO:Copying training dataset
2023-04-16 03:57:08,464:INFO:Defining folds
2023-04-16 03:57:08,464:INFO:Declaring metric variables
2023-04-16 03:57:08,464:INFO:Importing untrained model
2023-04-16 03:57:08,464:INFO:Dummy Regressor Imported successfully
2023-04-16 03:57:08,464:INFO:Starting cross validation
2023-04-16 03:57:08,465:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-16 03:57:08,685:INFO:Calculating mean and std
2023-04-16 03:57:08,685:INFO:Creating metrics dataframe
2023-04-16 03:57:08,703:INFO:Uploading results into container
2023-04-16 03:57:08,703:INFO:Uploading model into container now
2023-04-16 03:57:08,703:INFO:_master_model_container: 18
2023-04-16 03:57:08,703:INFO:_display_container: 2
2023-04-16 03:57:08,703:INFO:DummyRegressor()
2023-04-16 03:57:08,703:INFO:create_model() successfully completed......................................
2023-04-16 03:57:08,782:INFO:SubProcess create_model() end ==================================
2023-04-16 03:57:08,782:INFO:Creating metrics dataframe
2023-04-16 03:57:08,785:INFO:Initializing create_model()
2023-04-16 03:57:08,785:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x289d54ca0>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-16 03:57:08,785:INFO:Checking exceptions
2023-04-16 03:57:08,785:INFO:Importing libraries
2023-04-16 03:57:08,785:INFO:Copying training dataset
2023-04-16 03:57:08,786:INFO:Defining folds
2023-04-16 03:57:08,786:INFO:Declaring metric variables
2023-04-16 03:57:08,786:INFO:Importing untrained model
2023-04-16 03:57:08,786:INFO:Declaring custom model
2023-04-16 03:57:08,787:INFO:Linear Regression Imported successfully
2023-04-16 03:57:08,787:INFO:Cross validation set to False
2023-04-16 03:57:08,787:INFO:Fitting Model
2023-04-16 03:57:08,826:INFO:LinearRegression(n_jobs=-1)
2023-04-16 03:57:08,826:INFO:create_model() successfully completed......................................
2023-04-16 03:57:08,921:INFO:_master_model_container: 18
2023-04-16 03:57:08,921:INFO:_display_container: 2
2023-04-16 03:57:08,922:INFO:LinearRegression(n_jobs=-1)
2023-04-16 03:57:08,922:INFO:compare_models() successfully completed......................................
2023-04-16 03:57:08,948:INFO:Initializing save_model()
2023-04-16 03:57:08,948:INFO:save_model(model=LinearRegression(n_jobs=-1), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/6h/lc7qdbvj2pj7j5w_bscg4wb40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Local time'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Local time'],
                                    transformer=LeaveOneOutEncoder(cols=['Local '
                                                                         'time'],
                                                                   handle_missing='return_nan',
                                                                   random_state=5298))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2023-04-16 03:57:08,948:INFO:Adding model into prep_pipe
2023-04-16 03:57:08,954:INFO:best_model.pkl saved in current working directory
2023-04-16 03:57:08,958:INFO:Pipeline(memory=FastMemory(location=/var/folders/6h/lc7qdbvj2pj7j5w_bscg4wb40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Local time'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Local time'],
                                    transformer=LeaveOneOutEncoder(cols=['Local '
                                                                         'time'],
                                                                   handle_missing='return_nan',
                                                                   random_state=5298))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LinearRegression(n_jobs=-1))])
2023-04-16 03:57:08,958:INFO:save_model() successfully completed......................................
